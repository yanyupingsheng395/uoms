<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.ReportMapper">

    <select id="getSourceList" resultType="map">
        SELECT SOURCE_ID,SOURCE_NAME FROM W_SOURCE
    </select>

    <select id="getOpDaillyReport" resultType="java.util.LinkedHashMap">
        WITH baseorder AS (
        SELECT
        t.REAL_FEE,
        t.INNER_BUY,
        t.TICKET_FEE,
        t.SOURCE_ID,
        t.SHOP_ID,
        t.ORDER_TYPE,
        nvl(t.QUANTITY,0) QUANTITY
        FROM W_ORDERS t
        WHERE
        t.STATUS IN('doing','shipping','accept','done','wait')
        AND t.ORDER_DT_WID &gt;=#{startDate}
        AND t.ORDER_DT_WID &lt;=#{endDate}
        ),
        gap  AS (
        SELECT
        1 id,
        sum((t2.PRICE*t2.quantity- t2.DISCOUNT)/t2.quantity) SALES_PRICE,  --平销价
        sum(nvl(t2.MKT_PRICE,0)) MKT_PRICE  --吊牌价
        FROM
        W_ORDER_DETAILS t2
        WHERE
        t2.ORDER_DT_WID &gt;=#{startDate}
        AND t2.ORDER_DT_WID &lt;=#{endDate}
        <if test="sourceType != null and sourceType != ''">
            AND t2.SOURCE_ID = #{sourceType}
        </if>
        ),
        gap0 AS (
        SELECT
        1 id,
        COUNT(CASE WHEN t.IS_OFFLINE =1 THEN T.ID ELSE NULL END) OFFLINE_USER, --线下注册用户数
        COUNT(CASE WHEN t.IS_OFFLINE !=1 THEN T.ID ELSE NULL END) ONLINE_USER --线上注册用户数
        FROM W_USERS t
        WHERE
        to_char(t.CREATE_TIME,'yyyyMMdd') &gt;=#{startDate}
        AND to_char(t.CREATE_TIME,'yyyyMMdd') &lt;=#{endDate}
        ),
        gap1 AS(
        SELECT
        1 id,
        COUNT(DISTINCT CASE WHEN t2.IS_OFFLINE =1 THEN T1.user_id ELSE NULL END)  OFFLINE_FP_USER,
        COUNT(DISTINCT CASE WHEN t2.IS_OFFLINE !=1 THEN T1.user_id ELSE NULL END)  ONLINE_FP_USER
        FROM W_ORDERS t1,W_USERS t2
        WHERE t1.USER_ID = t2.ID
        AND t1.VALID_STATUS = 1
        AND t1.ORDER_DT_WID &gt;=#{startDate}
        AND t1.ORDER_DT_WID  &lt;=#{endDate}
        AND t1.REAL_FEE >= 10
        AND INNER_BUY NOT IN('yes','can')
        AND t1.IS_FP = 'Y'
        <if test="sourceType != null and sourceType != ''">
            AND t1.SOURCE_ID = #{sourceType}
        </if>
        ),
        gap2 AS (
        SELECT
        1 id,
        SUM(t.REAL_FEE) curenttotal,--2018销售
        SUM(CASE WHEN t.INNER_BUY NOT IN('yes','can','tiyan') AND REAL_FEE >= 10 THEN REAL_FEE ELSE 0 END) curenttotal_g,   --正常订单
        SUM(CASE WHEN t.INNER_BUY = 'can' THEN REAL_FEE ELSE 0  END) canCount,--特卖
        SUM(CASE WHEN t.INNER_BUY = 'yes' THEN REAL_FEE ELSE 0 END) yesCount,--内购
        SUM(CASE WHEN t.INNER_BUY = 'inner' THEN REAL_FEE ELSE 0  END) innerCount,--团购
        SUM(CASE WHEN t.INNER_BUY = 'tiyan' THEN REAL_FEE ELSE 0  END) tiyanCount,--一线体验
        SUM(t.TICKET_FEE) ticketCount--电子券
        FROM baseorder t
        WHERE 1=1
        <if test="sourceType != null and sourceType != ''">
            AND t.SOURCE_ID = #{sourceType}
        </if>
        ),
        gap3 AS (
        SELECT
        1 id,
        COUNT(1) ordercount,
        ROUND(SUM(REAL_FEE) / DECODE(COUNT(1),0,1,COUNT(1)),2) price,
        SUM(QUANTITY) sum_quantity
        FROM baseorder t
        WHERE
        t.ORDER_TYPE not in('couponsale','precard')
        AND t.INNER_BUY NOT IN('yes','can','tiyan')
        AND REAL_FEE >= 10
        AND t.SHOP_ID != 1300
        <if test="sourceType != null and sourceType != ''">
            AND t.SOURCE_ID = #{sourceType}
        </if>
        ),
        gap4 AS (
        SELECT
        1 id,
        trunc(SUM(CASE WHEN t.SOURCE_ID IN(2,3,4) THEN REAL_FEE ELSE 0 END) / DECODE(SUM(REAL_FEE),0,1,SUM(REAL_FEE)),4)*100 wireless_pct
        FROM baseorder t
        WHERE
        t.ORDER_TYPE not in('couponsale','precard')
        AND t.INNER_BUY NOT IN('yes','can')
        AND REAL_FEE >= 10
        AND t.SHOP_ID != 1300
        <if test="sourceType != null and sourceType != ''">
            AND t.SOURCE_ID = #{sourceType}
        </if>
        ),
        gap5 AS (
            SELECT
            1 id,
            SUM(t.REAL_FEE) pretotalgmv,
            SUM(CASE WHEN t.INNER_BUY NOT IN('yes','can','tiyan') AND REAL_FEE >= 10 THEN REAL_FEE ELSE 0 END) pretotalgmv_g
            FROM W_ORDERS t
            WHERE
            t.STATUS IN('doing','shipping','accept','done','wait')
            <if test="sourceType != null and sourceType != ''">
                AND t.SOURCE_ID = #{sourceType}
            </if>
            AND t.ORDER_DT_WID  &gt;= #{laststartDate}
            AND t.ORDER_DT_WID  &lt;= #{lastendDate}
        )
        SELECT
        GAP0.OFFLINE_USER,
        GAP0.ONLINE_USER,
        GAP1.OFFLINE_FP_USER,
        GAP1.ONLINE_FP_USER,
        NVL(GAP2.CURENTTOTAL,0) CURENTTOTAL,
        NVL(GAP2.CURENTTOTAL_G,0) CURENTTOTAL_G,
        NVL(GAP2.CANCOUNT,0) CANCOUNT,
        NVL(GAP2.YESCOUNT,0) YESCOUNT,
        NVL(GAP2.INNERCOUNT,0) INNERCOUNT,
        NVL(GAP2.TIYANCOUNT,0) TIYANCOUNT,
        NVL(GAP2.TICKETCOUNT,0) TICKETCOUNT,
        NVL(GAP5.PRETOTALGMV,0) PRETOTALGMV,
        NVL(GAP5.PRETOTALGMV_G,0) PRETOTALGMV_G,
        (CASE WHEN NVL(GAP5.PRETOTALGMV,0)=0 THEN 0 ELSE TRUNC((GAP2.CURENTTOTAL-GAP5.PRETOTALGMV)/GAP5.PRETOTALGMV,4)*100 END) GMV_GROWTH,
        (CASE WHEN NVL(GAP5.PRETOTALGMV_G,0)=0 THEN 0 ELSE TRUNC((GAP2.CURENTTOTAL_G-GAP5.PRETOTALGMV_G)/GAP5.PRETOTALGMV_G,4)*100 END) GMV_GROWTH_G,
        NVL(GAP4.WIRELESS_PCT,0) WIRELESS_PCT,
        NVL(GAP3.ORDERCOUNT,0) ORDERCOUNT,
        NVL(GAP3.PRICE,0) PRICE,
        NVL(GAP3.SUM_QUANTITY,0) SUM_QUANTITY,
        (CASE WHEN NVL(GAP3.SUM_QUANTITY,0)=0 THEN 0 ELSE round(NVL(GAP2.CURENTTOTAL_G,0)/GAP3.SUM_QUANTITY,2) END) PPRICE,
        NVL(GAP.SALES_PRICE,0) SALES_PRICE,
        NVL(GAP.MKT_PRICE,0) MKT_PRICE,
        (CASE WHEN NVL(GAP.MKT_PRICE,0)=0 THEN 0 ELSE TRUNC(NVL(GAP.SALES_PRICE,0)/GAP.MKT_PRICE,4)*100 END)  DISCOUNT
        FROM  GAP0,GAP1,GAP2,GAP3,GAP4,GAP5,GAP
        WHERE GAP0.ID=GAP1.ID
        AND GAP0.ID=GAP2.ID
        AND GAP0.ID=GAP3.ID
        AND GAP0.ID=GAP4.ID
        AND GAP0.ID=GAP5.ID
        AND GAP0.ID=GAP.ID
    </select>

    <select id="getBrandReportData" resultType="java.util.LinkedHashMap">
        WITH GAP AS (
        SELECT
        T4.KPI_NAME BRAND_NAME,
        SUM(T2.PRICE*T2.QUANTITY- T2.DISCOUNT) LINE_FEE
        FROM
        W_ORDER_DETAILS T2,
        W_BRAND T4
        WHERE
        T2.BRAND_ID = T4.BRAND_ID
        AND T2.ORDER_DT_WID &gt;= #{startDate}
        AND T2.ORDER_DT_WID &lt;= #{endDate}
        <if test="sourceType != null and sourceType != ''">
              AND T2.SOURCE_ID = #{sourceType}
       </if>
        GROUP BY T4.KPI_NAME
        ),
        --除AIMER品牌之外其余品牌的金额和占比
        PCT1 AS(
        SELECT
        BRAND_NAME,
        SUM(LINE_FEE) BRAND_FEE,
        TRUNC(SUM(LINE_FEE)/(SELECT SUM(LINE_FEE) FROM GAP),4) * 100 BRAND_PCT
        FROM GAP WHERE BRAND_NAME!='Aimer'
        GROUP BY GAP.BRAND_NAME
        ),
        PCT3 AS(
        SELECT SUM(BRAND_PCT) TOTALPCT FROM PCT1
        ),
        PCT2 AS(
        SELECT
        BRAND_NAME,
        SUM(LINE_FEE) BRAND_FEE,
        100-(SELECT TOTALPCT FROM PCT3) BRAND_PCT
        FROM GAP WHERE BRAND_NAME='Aimer'
        GROUP BY GAP.BRAND_NAME
        )
        SELECT
        BRAND_NAME,BRAND_FEE,BRAND_PCT FROM PCT2
        UNION ALL
        SELECT
        BRAND_NAME,BRAND_FEE,BRAND_PCT FROM PCT1

    </select>

 </mapper>
