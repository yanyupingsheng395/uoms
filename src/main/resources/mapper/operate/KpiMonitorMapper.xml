<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.KpiMonitorMapper">

    <resultMap id="BaseResultMap" type="com.linksteady.operate.domain.WeekInfo">
        <!--
          WARNING - @mbg.generated
        -->
        <result column="YEAR" jdbcType="DECIMAL" property="year" />
        <result column="WEEK_WID" jdbcType="DECIMAL" property="weekWid" />
        <result column="WEEK_OF_YARE_NAME" jdbcType="VARCHAR" property="weekOfYareName" />
        <result column="WEEK_BEGIN_WID" jdbcType="DECIMAL" property="weekBeginWid" />
        <result column="WEEK_END_WID" jdbcType="DECIMAL" property="weekEndWid" />
    </resultMap>

    <select id="getWeekList" resultMap="BaseResultMap">
        SELECT DISTINCT T.YEAR,
        T.WEEK_WID,
        T.WEEK_OF_YARE_NAME,
        T.WEEK_BEGIN_WID,
        T.WEEK_END_WID
        FROM W_DATE T
        WHERE ROW_WID &gt; #{beginWid}
        AND ROW_WID &lt;= #{endWid}
        ORDER BY WEEK_WID ASC
    </select>

    <select id="getGMV" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        SUM (W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) RP_GMV  --复购金额

        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;= #{startDt}
        AND W_DATE.ROW_WID &lt;= #{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
        ORDER BY W_DATE.DAY_SHORT_NAME ASC
    </select>

    <select id="getTradeUser" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        COUNT(DISTINCT W_ORDER_DETAILS.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.USER_ID END) RP_CNT
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
    </select>

    <select id="getAvgCsPrice" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        W_ORDER_DETAILS.PRICE,
        W_ORDER_DETAILS.QUANTITY,
        W_ORDER_DETAILS.DISCOUNT,
        NVL(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT,0) GMV,
        W_ORDER_DETAILS.IS_FP,
        W_ORDER_DETAILS.USER_ID
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.USER_ID END) RP_CNT,
        SUM(gmv) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN g1.IS_FP='Y' THEN GMV ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN GMV ELSE 0 END) RP_GMV  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_GMV/g2.TOTAL_CNT,2) END) PRICE,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_GMV/g2.FP_CNT,2) END) FP_PRICE,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_GMV/g2.RP_CNT,2) END) RP_PRICE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>
 </mapper>
