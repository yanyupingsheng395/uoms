<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.qywx.dao.PushListMapper">

    <resultMap id="baseResult" type="com.linksteady.qywx.domain.PushListInfo">
        <result column="PUSH_ID" jdbcType="DECIMAL" property="pushId"></result>
        <result column="PUSH_CONTENT" jdbcType="VARCHAR" property="pushContent"></result>
        <result column="PUSH_PERIOD" jdbcType="VARCHAR" property="pushPeriod"></result>
        <result column="PUSH_STATUS" jdbcType="VARCHAR" property="pushStatus"></result>
        <result column="CALLBACK_ID" jdbcType="VARCHAR" property="callbackId"></result>
        <result column="CALLBACK_CODE" jdbcType="VARCHAR" property="callbackCode"></result>
        <result column="CALLBACK_DESC" jdbcType="VARCHAR" property="callbackDesc"></result>
        <result column="SOURCE_CODE" jdbcType="VARCHAR" property="sourceCode"></result>
        <result column="USER_PHONE" jdbcType="VARCHAR" property="userPhone"></result>
        <result column="USER_OPENID" jdbcType="VARCHAR" property="userOpenId"></result>
        <result column="SOURCE_ID" jdbcType="DECIMAL" property="sourceId"></result>
        <result column="PUSH_DATE" jdbcType="DATE" property="pushDate"></result>
        <result column="PUSH_DATE_STR" jdbcType="VARCHAR" property="pushDateStr"></result>
    </resultMap>

    <select id="getTotalCount" resultType="int">
        select count(1)
        FROM UO_OP_PUSH_LIST
        WHERE 1=1
        <if test="pushStatus != null and pushStatus != ''">
            and PUSH_STATUS = #{pushStatus}
        </if>
        <if test="sourceCode != null and sourceCode != ''">
            and SOURCE_CODE = #{sourceCode}
        </if>
        <if test="pushDateStr != null and pushDateStr != ''">
            and trunc(PUSH_DATE, 'dd') = to_date(#{pushDateStr}, 'yyyymmdd')
        </if>
    </select>

    <select id="getPushInfoListPage" resultMap="baseResult">
        select PUSH_ID,
        PUSH_CONTENT,
        PUSH_PERIOD,
        PUSH_STATUS,
        CALLBACK_ID,
        CALLBACK_CODE,
        CALLBACK_DESC,
        SOURCE_CODE,
        USER_PHONE,
        USER_OPENID,
        SOURCE_ID,
        to_char(PUSH_DATE, 'yyyymmdd') PUSH_DATE_STR
        FROM UO_OP_PUSH_LIST
        WHERE 1=1
        <if test="pushStatus != null and pushStatus != ''">
            and PUSH_STATUS = #{pushStatus}
        </if>
        <if test="sourceCode != null and sourceCode != ''">
            and SOURCE_CODE = #{sourceCode}
        </if>
        <if test="pushDateStr != null and pushDateStr != ''">
            and PUSH_DATE::date = to_date(#{pushDateStr}, 'yyyymmdd')
        </if>
        order by PUSH_ID desc
        limit #{limit} offset #{offset}
    </select>

    <insert id="insertTestMsg">
        <selectKey keyProperty="pushId" resultType="java.lang.Long" order="AFTER">
            SELECT currval('uo_op_push_list_seq'::regclass) as pushId
        </selectKey>
        INSERT INTO UO_OP_PUSH_LIST(USER_PHONE,USER_OPENID,PUSH_CONTENT,PUSH_STATUS,SOURCE_CODE,SOURCE_ID,PUSH_PERIOD,IS_PUSH)
        values(
            #{userPhone},
            NULL,
            #{pushContent},
            'S',
            'T',
            #{pushId},
            #{pushPeriod}::integer,
            '1')
    </insert>

    <select id="getPushDataOfDay" resultType="map">
        with v1 as ( select
        count(case when PUSH_STATUS = 'S' then 1 end) success_cnt,
        count(case when PUSH_STATUS &lt;&gt; 'P' then 1 end) push_cnt,
        count(case when PUSH_STATUS = 'F' then 1 end) fail_cnt,
        count(case when PUSH_STATUS = 'C' then 1 end) intercept_cnt,
        count(case when PUSH_STATUS = 'P' then 1 end) plan_cnt
        from  UO_OP_PUSH_LIST where now()::date - INSERT_DT::date = #{day}),
        v2 as(select
        count(case when PUSH_STATUS = 'S' then 1 end) success_cnt,
        count(case when PUSH_STATUS &lt;&gt; 'P' then 1 end) push_cnt,
        count(case when PUSH_STATUS = 'F' then 1 end) fail_cnt,
        count(case when PUSH_STATUS = 'C' then 1 end) intercept_cnt,
        count(case when PUSH_STATUS = 'P' then 1 end) plan_cnt
        from  UO_OP_PUSH_LIST_LARGE where now()::date - INSERT_DT::date = #{day})
        select v1.success_cnt+v2.success_cnt success_cnt, v1.push_cnt+v2.push_cnt push_cnt, v1.fail_cnt+v2.fail_cnt fail_cnt,v1.intercept_cnt+v2.intercept_cnt intercept_cnt, v1.plan_cnt+v2.plan_cnt plan_cnt from v1, v2
    </select>

    <select id="getPushDataOfMonth" resultType="map">
        with v1 as ( select
        count(case when PUSH_STATUS = 'S' then 1 end) success_cnt,
        count(case when PUSH_STATUS &lt;&gt; 'P' then 1 end) push_cnt,
        count(case when PUSH_STATUS = 'F' then 1 end) fail_cnt,
        count(case when PUSH_STATUS = 'C' then 1 end) intercept_cnt,
        count(case when PUSH_STATUS = 'P' then 1 end) plan_cnt
        from  UO_OP_PUSH_LIST where to_char(INSERT_DT, 'yyyymmdd') &lt;= #{endDt} and to_char(INSERT_DT, 'yyyymmdd') &gt;= #{startDt}),
        v2 as(select
        count(case when PUSH_STATUS = 'S' then 1 end) success_cnt,
        count(case when PUSH_STATUS &lt;&gt; 'P' then 1 end) push_cnt,
        count(case when PUSH_STATUS = 'F' then 1 end) fail_cnt,
        count(case when PUSH_STATUS = 'C' then 1 end) intercept_cnt,
        count(case when PUSH_STATUS = 'P' then 1 end) plan_cnt
        from  UO_OP_PUSH_LIST_LARGE where to_char(INSERT_DT, 'yyyymmdd') &lt;= #{endDt} and to_char(INSERT_DT, 'yyyymmdd') &gt;= #{startDt})
        select v1.success_cnt+v2.success_cnt success_cnt, v1.push_cnt+v2.push_cnt push_cnt, v1.fail_cnt+v2.fail_cnt fail_cnt,v1.intercept_cnt+v2.intercept_cnt intercept_cnt, v1.plan_cnt+v2.plan_cnt plan_cnt from v1, v2
    </select>

    <select id="getRptAndBlackData" resultType="map">
        with v1 as (
            select count(1) day_rpt from uo_op_push_rpt where now()::date - INSERT_DT::date = #{day}
        ),v2 as (
            select count(1) month_rpt from uo_op_push_rpt where to_char(INSERT_DT, 'yyyymmdd') &lt;= #{endDt} and to_char(INSERT_DT, 'yyyymmdd') &gt;= #{startDt}
        ),v3 as (
            select count(1) day_black from UO_OP_PHONEBLACKLIST where EXPIRE_DT::date &gt;= to_date(#{endDt}, 'yyyymmdd')
        ) select * from v1, v2, v3
    </select>
</mapper>