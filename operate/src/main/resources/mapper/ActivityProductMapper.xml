<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.ActivityProductMapper">

    <resultMap id="base" type="com.linksteady.operate.domain.ActivityProduct">
        <result property="id" jdbcType="DECIMAL" column="ID"/>
        <result property="headId" jdbcType="DECIMAL" column="HEAD_ID"/>
        <result property="productId" jdbcType="DECIMAL" column="EPB_PRODUCT_ID"/>
        <result property="minPrice" jdbcType="DECIMAL" column="MIN_PRICE"/>
        <result property="productName" jdbcType="VARCHAR" column="PRODUCT_NAME"/>
        <result property="formalPrice" jdbcType="DECIMAL" column="FORMAL_PRICE"/>
        <result property="activityIntensity" jdbcType="DECIMAL" column="ACTIVITY_INTENSITY"/>
        <result property="productUrl" jdbcType="VARCHAR" column="PRODUCT_URL"/>
        <result property="productAttr" jdbcType="VARCHAR" column="PRODUCT_ATTR"/>
        <result property="activityStage" jdbcType="VARCHAR" column="ACTIVITY_STAGE"/>
        <result property="skuCode" jdbcType="VARCHAR" column="SKU_CODE"/>
    </resultMap>

    <select id="getActivityProductListPage" resultMap="base">
        select * from (
        select t.*, ROWNUM rn from (
          select ID, HEAD_ID, EPB_PRODUCT_ID, PRODUCT_NAME, MIN_PRICE, FORMAL_PRICE, ACTIVITY_INTENSITY, PRODUCT_URL, PRODUCT_ATTR from UO_OP_ACTIVITY_PRODUCT
          where HEAD_ID = #{headId}
        <if test="productId != null and productId != ''">
            and EPB_PRODUCT_ID = #{productId}
        </if>
        <if test="productName != null and productName != ''">
            and product_name like concat('%', concat(#{productName}, '%'))
        </if>
        <if test="productAttr != null and productAttr != ''">
            and product_attr = #{productAttr}
        </if>
        order by HEAD_ID desc
        ) t where ROWNUM &lt;=#{end}
        ) where RN &gt;= #{start}
    </select>

    <select id="getCount" resultType="int">
        select count(1) from UO_OP_ACTIVITY_PRODUCT where HEAD_ID = #{headId}
        <if test="productId != null and productId != ''">
            and EPB_PRODUCT_ID = #{productId}
        </if>
        <if test="productName != null and productName != ''">
            and product_name like concat('%', concat(#{productName}, '%'))
        </if>
        <if test="productAttr != null and productAttr != ''">
            and product_attr = #{productAttr}
        </if>
    </select>

    <insert id="saveDataList">
        insert into UO_OP_ACTIVITY_PRODUCT(head_id, EPB_PRODUCT_ID, user_count, product_price, prefer_type, prefer_value,
        product_act_price, min_price15, min_price30)
        <foreach item="item" collection="list" index="index" separator="union all">
            select #{item.headId},
            #{item.productId},#{item.userCount},#{item.productPrice},#{item.preferType},#{item.preferValue},#{item.productActPrice},
            #{item.minPrice15}, #{item.minPrice30} from dual
        </foreach>
    </insert>

    <delete id="deleteByHeadId">
        delete from UO_OP_ACTIVITY_PRODUCT where head_id = #{headId}
    </delete>

    <insert id="saveActivityProduct">
        insert into UO_OP_ACTIVITY_PRODUCT(ID,HEAD_ID, EPB_PRODUCT_ID, PRODUCT_NAME, SKU_CODE, MIN_PRICE, FORMAL_PRICE, ACTIVITY_INTENSITY, PRODUCT_URL, PRODUCT_ATTR, ACTIVITY_STAGE)
        values (SEQ_ACTIVITY_PRODUCT_ID.nextval, #{headId}, #{productId}, #{productName}, #{skuCode}, #{minPrice}, #{formalPrice}, #{activityIntensity}, #{productUrl}, #{productAttr}, #{activityStage})
    </insert>

    <select id="getProductById" resultMap="base">
        select HEAD_ID, EPB_PRODUCT_ID, PRODUCT_NAME, SKU_CODE, MIN_PRICE, FORMAL_PRICE, ACTIVITY_INTENSITY, PRODUCT_URL, PRODUCT_ATTR, ACTIVITY_STAGE, ID from UO_OP_ACTIVITY_PRODUCT
        where ID = #{id}
    </select>

    <update id="updateActivityProduct">
        update UO_OP_ACTIVITY_PRODUCT
        set
        EPB_PRODUCT_ID = #{productId}, SKU_CODE = #{skuCode},
        PRODUCT_NAME = #{productName}, MIN_PRICE = #{minPrice}, FORMAL_PRICE = #{formalPrice}, PRODUCT_ATTR = #{productAttr}
        where ID = #{id}
    </update>

    <insert id="saveActivityProductList">
        insert into UO_OP_ACTIVITY_PRODUCT(ID,HEAD_ID, EPB_PRODUCT_ID, PRODUCT_NAME, MIN_PRICE, FORMAL_PRICE, ACTIVITY_INTENSITY, PRODUCT_ATTR, ACTIVITY_STAGE, PRODUCT_URL, SKU_CODE)
        select SEQ_ACTIVITY_PRODUCT_ID.nextval,A.* FROM (
        <foreach collection="list" item="item" index="index"  close=")" open="(" separator="union">
           SELECT
                  #{item.headId},
                  #{item.productId},
                  #{item.productName},
                  #{item.minPrice},
                  #{item.formalPrice},
                  #{item.activityIntensity},
                  #{item.productAttr},
                  #{item.activityStage},
                  #{item.productUrl},
                  #{item.skuCode}
           FROM DUAL
        </foreach>
        ) A
    </insert>

    <delete id="deleteProduct">
        delete from UO_OP_ACTIVITY_PRODUCT where head_id = #{headId} and EPB_PRODUCT_ID in
        <foreach collection="productList" item="item" separator="," open="(" close=")">
            #{item}
        </foreach>
    </delete>

    <select id="validProductNum" resultType="int">
        select count(1) from UO_OP_ACTIVITY_PRODUCT
        where HEAD_ID = #{headId}
    </select>

    <select id="getSameProductCount" resultType="int">
        select count(1) from UO_OP_ACTIVITY_PRODUCT
        where head_id = #{headId} and activity_stage = #{stage} and EPB_PRODUCT_ID in
        <foreach collection="productIdList" separator="," open="(" close=")" item="item">
            #{item}
        </foreach>
    </select>

    <delete id="deleteRepeatData">
        delete from UO_OP_ACTIVITY_PRODUCT where EPB_PRODUCT_ID in
        <foreach collection="productList" item="item" open="(" close=")" separator=",">
            #{item.productId}
        </foreach>
    </delete>


    <select id="geFirstProductInfo"  resultMap="base">
        select HEAD_ID, EPB_PRODUCT_ID, PRODUCT_NAME, MIN_PRICE, FORMAL_PRICE, ACTIVITY_INTENSITY, PRODUCT_URL, PRODUCT_ATTR, ACTIVITY_STAGE, ID from UO_OP_ACTIVITY_PRODUCT
        where HEAD_ID = #{headId} and ACTIVITY_STAGE=#{stage} AND rownum=1
    </select>

    <insert id="insertActivityProdMapping">
        insert into UO_OP_ACTIVITY_PROD_MAPPING(
            HEAD_ID,ACTIVITY_STAGE,PRESALE_PRODUCT_ID,PRESALE_PRODUCT_NAME,PRODUCT_ID,PRODUCT_NAME,INSERT_DT
        )SELECT
             P.HEAD_ID,P.ACTIVITY_STAGE,P.EPB_PRODUCT_ID,P.PRODUCT_NAME,P.EPB_PRODUCT_ID,P.PRODUCT_NAME,SYSDATE
        FROM UO_OP_ACTIVITY_PRODUCT P WHERE P.HEAD_ID=#{headId} AND P.ACTIVITY_STAGE=#{stage}
    </insert>

    <delete id="deleteActivityProdMapping">
       delete  from UO_OP_ACTIVITY_PROD_MAPPING WHERE HEAD_ID=#{headId}
        <if test="stage != null and stage != ''">
            AND ACTIVITY_STAGE=#{stage}
        </if>
    </delete>

    <delete id="deleteData">
        delete from UO_OP_ACTIVITY_HEADER where HEAD_ID = #{headId}
    </delete>

</mapper>