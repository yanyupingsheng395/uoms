<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.ActivityTemplateMapper">

    <resultMap id="base" type="com.linksteady.operate.domain.ActivityTemplate">
        <result column="TMP_CODE" jdbcType="VARCHAR" property="code"/>
        <result column="TMP_NAME" jdbcType="VARCHAR" property="name"/>
        <result column="TMP_CONTENT" jdbcType="VARCHAR" property="content"/>
        <result column="IS_PROD_URL" jdbcType="VARCHAR" property="isProdUrl"/>
        <result column="IS_PROD_NAME" jdbcType="VARCHAR" property="isProdName"/>
        <result column="IS_PRICE" jdbcType="VARCHAR" property="isPrice"/>
    </resultMap>

    <resultMap id="templateMap" type="com.linksteady.operate.domain.ActivityTemplate">
        <result property="code" jdbcType="VARCHAR" column="TMP_CODE"></result>
        <result property="name" jdbcType="VARCHAR" column="TMP_NAME"></result>
        <result property="content" jdbcType="VARCHAR" column="TMP_CONTENT"></result>
        <result property="remark" jdbcType="VARCHAR" column="REMARK"></result>
        <result property="isPersonal" jdbcType="VARCHAR" column="IS_PERSONAL"></result>
    </resultMap>

    <insert id="saveTemplate">
        insert into UO_OP_ACTIVITY_TEMPLATE(
            TMP_CONTENT, INSERT_DT, INSERT_BY, TMP_CODE, IS_PERSONAL, TMP_NAME, IS_PROD_NAME, IS_PROD_URL, IS_PRICE
        ) values (#{content}, #{insertDt}, #{insertBy}, SEQ_UO_OP_ACTIVITY_TEMPLATE.nextval, #{isPersonal}, #{name}, #{isProdName}, #{isProdUrl}, #{isPrice})
    </insert>

    <delete id="deleteTemplate">
        delete from UO_OP_ACTIVITY_TEMPLATE where TMP_CODE = #{code}
    </delete>

    <select id="getTemplate" resultMap="base">
        select TMP_CONTENT, REMARK, INSERT_DT, INSERT_BY, UPDATE_DT, UPDATE_BY, TMP_CODE, IS_PERSONAL, RELATION, TMP_NAME, SCENE, IS_PROD_NAME, IS_PROD_URL, IS_PRICE from UO_OP_ACTIVITY_TEMPLATE where TMP_CODE = #{code}
    </select>

    <update id="update" parameterType="com.linksteady.operate.domain.ActivityTemplate">
        update UO_OP_ACTIVITY_TEMPLATE set TMP_CONTENT = #{content}, TMP_NAME = #{name}, IS_PROD_URL = #{isProdUrl},
        IS_PROD_NAME = #{isProdName}, IS_PRICE = #{isPrice}
        where TMP_CODE = #{code}
    </update>

    <select id="getTemplateList" resultMap="base">
        select * from (
          select ROWNUM rn, t.* from (
            select TMP_CODE, TMP_CONTENT, TMP_CONTENT_NORMAL from UO_OP_ACTIVITY_TEMPLATE
            <if test="code != null and code != ''">
                <where>
                    TMP_CODE = #{code}
                </where>
            </if>
          ) t where ROWNUM &lt;= #{end}
        ) where rn &gt;= #{start}
    </select>

    <select id="getTotalCount" resultType="int">
        select count(1) from UO_OP_ACTIVITY_TEMPLATE
        <if test="code != null and code != ''">
            <where>
                TMP_CODE = #{code}
            </where>
        </if>
    </select>

    <select id="checkCode" resultType="int">
        select count(1) from UO_OP_ACTIVITY_TEMPLATE where TMP_CODE = #{code}
    </select>

    <select id="getTemplateTableData" resultMap="templateMap">
        select * from (
        with v1 as (select TMP_CODE, listagg(ACTIVITY_TYPE, ',') within group ( order by SMS_TEMPLATE_CODE ) SCENE
        from (
        select TMP_CODE, t2.ACTIVITY_TYPE, t2.SMS_TEMPLATE_CODE
        from UO_OP_ACTIVITY_TEMPLATE t1,
        UO_OP_ACTIVITY_GROUP t2
        where t1.TMP_CODE = t2.SMS_TEMPLATE_CODE(+)
        group by TMP_CODE, ACTIVITY_TYPE, SMS_TEMPLATE_CODE
        )
        group by TMP_CODE),
        v2 as (
        select TMP_CODE, listagg(GROUP_ID, ',') within group ( order by SMS_TEMPLATE_CODE asc) relation
        from (
        select TMP_CODE, t2.GROUP_ID, t2.SMS_TEMPLATE_CODE
        from UO_OP_ACTIVITY_TEMPLATE t1,
        UO_OP_ACTIVITY_GROUP t2
        where t1.TMP_CODE = t2.SMS_TEMPLATE_CODE(+)
        group by TMP_CODE, GROUP_ID, SMS_TEMPLATE_CODE
        )
        group by TMP_CODE
        )
        select t.TMP_CODE, t.TMP_NAME, t.TMP_CONTENT, t.IS_PERSONAL, v1.SCENE,
        case when v2.relation in ('1', '1,2', '2') then 'GROWTH' when v2.relation = '3' then 'LATENT'
        when v2.relation in ('1,3', '1,2,3', '2,3') then 'GROWTH,LATENT' end relation
        from UO_OP_ACTIVITY_TEMPLATE t, v1, v2
        where t.TMP_CODE = v1.TMP_CODE and t.TMP_CODE = v2.TMP_CODE
        order by TMP_CODE desc
        )
        where 1=1
        <if test="activityTemplate.name != null and activityTemplate.name != ''">
            and TMP_NAME like concat('%', concat(#{activityTemplate.name} ,'%'))
        </if>
        <if test="activityTemplate.isPersonal != null and activityTemplate.isPersonal != ''">
            and IS_PERSONAL = #{activityTemplate.isPersonal}
        </if>
        <if test="activityTemplate.relation != null and activityTemplate.relation != ''">
            and relation like concat('%', concat(#{activityTemplate.relation} ,'%'))
        </if>
        <if test="activityTemplate.scene != null and activityTemplate.scene != ''">
            and scene like concat('%', concat(#{activityTemplate.scene} ,'%'))
        </if>
    </select>
</mapper>