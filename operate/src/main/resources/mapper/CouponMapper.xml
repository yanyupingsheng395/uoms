<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.CouponMapper">
    <resultMap id="BaseResultMap" type="com.linksteady.operate.domain.CouponInfo">
        <!--
          WARNING - @mbg.generated
        -->
        <result column="COUPON_ID" jdbcType="DECIMAL" property="couponId"/>
        <result column="COUPON_DENOM" jdbcType="DECIMAL" property="couponDenom"/>
        <result column="COUPON_THRESHOLD" jdbcType="DECIMAL" property="couponThreshold"/>
        <result column="COUPON_URL" jdbcType="VARCHAR" property="couponUrl"/>
        <result column="COUPON_NUM" jdbcType="VARCHAR" property="couponNum"/>
        <result column="COUPON_INFO2" jdbcType="VARCHAR" property="couponInfo2"/>
        <result column="VALID_STATUS" jdbcType="VARCHAR" property="validStatus"/>
        <result column="VALID_END" jdbcType="VARCHAR" property="validEnd"/>
        <result column="COUPON_DISPLAY_NAME" jdbcType="VARCHAR" property="couponDisplayName"/>
        <result column="USER_VALUE" jdbcType="VARCHAR" property="userValue"/>
        <result column="PATH_ACTIVE" jdbcType="VARCHAR" property="pathActive"/>
        <result column="LIFE_CYCLE" jdbcType="VARCHAR" property="lifeCycle"/>
        <result column="COUPON_SOURCE" jdbcType="VARCHAR" property="couponSource"/>
        <result column="CHECK_FLAG" jdbcType="VARCHAR" property="checkFlag"/>
        <result column="CHECK_COMMENTS" jdbcType="VARCHAR" property="checkComments"/>
    </resultMap>

    <select id="getList" resultMap="BaseResultMap">
        SELECT * FROM(
        SELECT A.*,ROWNUM RN FROM
        (SELECT * FROM UO_OP_COUPON
        <if test="validStatus != null and validStatus != ''">
            where VALID_STATUS = #{validStatus}
        </if>
        order by COUPON_ID desc
        ) A WHERE ROWNUM &lt;=#{endRow}
        ) WHERE RN &gt;=#{startRow}
    </select>

    <select id="getTotalCount" resultType="int">
        select count(1) from UO_OP_COUPON
        <if test="validStatus != null and validStatus != ''">
            where VALID_STATUS = #{validStatus}
        </if>
    </select>

    <select id="getCouponIdsByGroupId" resultType="int">
        select COUPON_ID from UO_OP_DAILY_GROUP_COUPON where GROUP_ID = #{groupId}
    </select>

    <delete id="deleteByGroupId">
        delete from UO_OP_DAILY_GROUP_COUPON where GROUP_ID = #{groupId}
    </delete>

    <insert id="insertByGroupId">
        INSERT ALL
        <foreach item="item" index="index" collection="couponIds">
            INTO UO_OP_DAILY_GROUP_COUPON (GROUP_ID, COUPON_ID)
            values(#{groupId}, #{item})
        </foreach>
        select 1 from dual
    </insert>

    <insert id="save" parameterType="com.linksteady.operate.domain.CouponInfo">
        insert into UO_OP_COUPON(COUPON_ID, COUPON_DENOM, COUPON_THRESHOLD, COUPON_URL, COUPON_DESC, COUPON_TYPE, COUPON_NUM, COUPON_INFO1, COUPON_INFO2, COUPON_DISPLAY_NAME, VALID_STATUS, VALID_END, USER_VALUE, PATH_ACTIVE, LIFE_CYCLE, COUPON_SOURCE, CHECK_FLAG, CHECK_COMMENTS) VALUES
        (UO_OP_COUPON_SEQ.nextval, #{couponDenom}, #{couponThreshold}, #{couponUrl}, #{couponDesc}, #{couponType}, #{couponNum}, #{couponInfo1}, #{couponInfo2}, #{couponDisplayName}, 'Y', to_date(#{validEnd}, 'yyyymmdd'), #{userValue}, #{pathActive}, #{lifeCycle}, #{couponSource}, #{checkFlag}, #{checkComments})
    </insert>

    <update id="update" parameterType="com.linksteady.operate.domain.CouponInfo">
        update UO_OP_COUPON
        set COUPON_DENOM = #{couponDenom},COUPON_THRESHOLD = #{couponThreshold},COUPON_URL = #{couponUrl},COUPON_DESC = #{couponDesc},COUPON_TYPE = #{couponType},COUPON_NUM = #{couponNum},COUPON_INFO1 = #{couponInfo1},COUPON_INFO2 = #{couponInfo2},COUPON_DISPLAY_NAME = #{couponDisplayName},
        VALID_STATUS = #{validStatus}, VALID_END = to_date(#{validEnd}, 'yyyymmdd'), USER_VALUE = #{userValue}, LIFE_CYCLE = #{lifeCycle}, path_active = #{pathActive}
        where COUPON_ID = #{couponId}
    </update>

    <select id="getByCouponId" resultMap="BaseResultMap">
        select COUPON_ID, COUPON_DENOM, COUPON_THRESHOLD, COUPON_NAME, COUPON_URL, COUPON_DESC, COUPON_TYPE, COUPON_NUM, VALID_START, to_char(VALID_END, 'yyyymmdd') VALID_END, COUPON_INFO1, COUPON_INFO2, COUPON_DISPLAY_NAME, VALID_STATUS, COUPON_SOURCE, USER_VALUE, LIFE_CYCLE, PATH_ACTIVE, DISCOUNT_LEVEL, CHECK_FLAG, CHECK_COMMENTS from UO_OP_COUPON
        where COUPON_ID = #{couponId}
    </select>

    <select id="isCouponUsed" resultType="string">
        select distinct COUPON_ID from UO_OP_DAILY_GROUP_COUPON
        <where>
            COUPON_ID in
            <foreach collection="couponIds" open="(" close=")" item="item" separator=",">
                #{item}
            </foreach>
        </where>
    </select>

    <update id="updateStatus">
        update UO_OP_COUPON set VALID_STATUS = 'N' where COUPON_ID = #{couponId}
    </update>

    <delete id="deleteCoupon" parameterType="list">
        delete from UO_OP_COUPON where 1=1
        <if test="ids != null">
            and COUPON_ID in
            <foreach collection="ids" item="item" separator="," open="(" close=")">
                #{item}
            </foreach>
        </if>
    </delete>

    <select id="getCouponList" resultMap="BaseResultMap">
        select distinct t1.coupon_id, t1.coupon_denom, t1.coupon_threshold, t1.coupon_name, t1.coupon_url, t1.coupon_desc, t1.coupon_type, t1.coupon_num, t1.valid_start, to_char(t1.valid_end, 'yyyy-mm-dd') valid_end, t1.coupon_info1, t1.coupon_info2, t1.coupon_display_name, t1.valid_status, t1.coupon_source, t1.user_value, t1.life_cycle, t1.path_active, t1.discount_level, t1.check_flag, t1.check_comments from UO_OP_COUPON t1, UO_OP_DAILY_TEMPLATE_CONFIG t2
        where (t1.USER_VALUE like concat('%', concat(t2.USER_VALUE, '%'))
         or t1.LIFE_CYCLE like concat('%', concat(t2.LIFECYLE, '%'))
         or t1.PATH_ACTIVE like concat('%', concat(t2.PATH_ACTIVE, '%')))
         and t2.GROUP_ID = #{groupId}
         order by to_number(t1.COUPON_ID) desc
    </select>

    <insert id="insertCalculatedCoupon">
        merge into UO_OP_COUPON tt1
        using (
            select COUPON_DENOM,
                   PP_COUPON.DISCOUNT_LEVEL,
                   COUPON_THRESHOLD,
                   COUPON_NAME,
                   '0'            COUPON_SOURCE,
                   v1.USER_VALUE  USER_VALUE,
                   v2.LIFECYLE    LIFE_CYCLE,
                   v3.PATH_ACTIVE PATH_ACTIVE,
                   '0' CHECK_FLAG,
                   '补贴链接没有配置' CHECK_COMMENTS,
                   'N' VALID_STATUS
            from PP_COUPON,
                 (select DISCOUNT_LEVEL, listagg(USER_VALUE, ',') within group ( order by USER_VALUE) USER_VALUE
                  from (
                           select distinct t1.DISCOUNT_LEVEL, t2.USER_VALUE
                           from PP_COUPON t1,
                                UO_OP_DAILY_TEMPLATE_CONFIG t2
                           where t1.DISCOUNT_LEVEL = t2.DISCOUNT_LEVEL
                       )
                  group by DISCOUNT_LEVEL) v1,

                 (select DISCOUNT_LEVEL, listagg(LIFECYLE, ',') within group ( order by LIFECYLE) LIFECYLE
                  from (
                           select distinct t1.DISCOUNT_LEVEL, t2.LIFECYLE
                           from PP_COUPON t1,
                                UO_OP_DAILY_TEMPLATE_CONFIG t2
                           where t1.DISCOUNT_LEVEL = t2.DISCOUNT_LEVEL
                       )
                  group by DISCOUNT_LEVEL) v2,
                 (select DISCOUNT_LEVEL, listagg(PATH_ACTIVE, ',') within group ( order by PATH_ACTIVE) PATH_ACTIVE
                  from (
                           select distinct t1.DISCOUNT_LEVEL, t2.PATH_ACTIVE
                           from PP_COUPON t1,
                                UO_OP_DAILY_TEMPLATE_CONFIG t2
                           where t1.DISCOUNT_LEVEL = t2.DISCOUNT_LEVEL
                       )
                  group by DISCOUNT_LEVEL) v3
            where PP_COUPON.DISCOUNT_LEVEL = v1.DISCOUNT_LEVEL
              and PP_COUPON.DISCOUNT_LEVEL = v2.DISCOUNT_LEVEL
              and PP_COUPON.DISCOUNT_LEVEL = v3.DISCOUNT_LEVEL
        ) tt2
        on (tt1.COUPON_DISPLAY_NAME = tt2.COUPON_NAME and tt1.DISCOUNT_LEVEL = tt2.DISCOUNT_LEVEL)
        when not matched then
            insert (COUPON_ID, COUPON_DENOM, COUPON_THRESHOLD, COUPON_DISPLAY_NAME, COUPON_SOURCE, USER_VALUE,
                    LIFE_CYCLE, PATH_ACTIVE, DISCOUNT_LEVEL, CHECK_FLAG, CHECK_COMMENTS, VALID_STATUS)
            values (UO_OP_COUPON_SEQ.nextval, tt2.COUPON_DENOM, tt2.COUPON_THRESHOLD, tt2.COUPON_NAME, tt2.COUPON_SOURCE,
                    tt2.USER_VALUE, tt2.LIFE_CYCLE, tt2.PATH_ACTIVE,
                    tt2.DISCOUNT_LEVEL, tt2.CHECK_FLAG, tt2.CHECK_COMMENTS, tt2.VALID_STATUS)
    </insert>

    <delete id="deleteCouponGroup">
        delete from UO_OP_DAILY_GROUP_COUPON
        <where>
            GROUP_ID in
            <foreach collection="groupIds" separator="," item="item" open="(" close=")">
                #{item}
            </foreach>
        </where>
    </delete>

    <select id="checkCouponName" resultType="int">
        select count(1) from UO_OP_COUPON where COUPON_DISPLAY_NAME = #{couponName}
    </select>

    <update id="validEndDateNull">
        update UO_OP_COUPON set CHECK_FLAG = '0', CHECK_COMMENTS = '补贴有效截止日期未配置'
        where VALID_END is null
    </update>

    <update id="validEndDateNotNull">
        update UO_OP_COUPON set CHECK_FLAG = '0', CHECK_COMMENTS = '补贴已失效'
        where VALID_END is not null and trunc(VALID_END, 'dd') &lt; trunc(sysdate, 'dd')
    </update>

    <update id="validCouponUrl">
        update UO_OP_COUPON set CHECK_FLAG = '0', CHECK_COMMENTS = '当前补贴方式为自行领取，补贴链接未配置'
        where COUPON_URL is null
    </update>

    <update id="validCouponPass">
        update UO_OP_COUPON set CHECK_FLAG = '1', CHECK_COMMENTS = ''
    </update>
</mapper>