<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.KpiMonitorMapper">

    <resultMap id="datePeriodKpiMap" type="com.linksteady.operate.domain.DatePeriodKpi">
        <result column="MIN_MONTH" property="minPeriod" jdbcType="DECIMAL"></result>
        <result column="BUY_MONTH" property="buyPeriod" jdbcType="DECIMAL"></result>
        <result column="C_USERS" property="kpiValue" jdbcType="DECIMAL"></result>
        <result column="UPRICE" property="uprice" jdbcType="DECIMAL"></result>
    </resultMap>

    <resultMap id="kpiSummeryMap" type="com.linksteady.operate.domain.KpiSumeryInfo">
        <result column="GMV" property="gmv" jdbcType="DECIMAL"></result>
        <result column="UCNT" property="ucnt" jdbcType="DECIMAL"></result>
        <result column="UPRICE" property="uprice" jdbcType="DECIMAL"></result>
        <result column="PCNT" property="pcnt" jdbcType="DECIMAL"></result>
        <result column="FREQ" property="freq" jdbcType="DECIMAL"></result>
        <result column="PRICE" property="price" jdbcType="DECIMAL"></result>
        <result column="JOINRATE" property="joinrate" jdbcType="DECIMAL"></result>
        <result column="SPRICE" property="sprice" jdbcType="DECIMAL"></result>
    </resultMap>

    <select id="getGMVBySpu" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        SUM (W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) RP_GMV  --复购金额

        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;= #{startDt}
        AND W_DATE.ROW_WID &lt;= #{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
        ORDER BY W_DATE.DAY_SHORT_NAME ASC
    </select>

    <select id="getGMV" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        SUM (W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT ELSE 0 END) RP_GMV  --复购金额
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;= #{startDt}
        AND W_DATE.ROW_WID &lt;= #{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
        ORDER BY W_DATE.DAY_SHORT_NAME ASC
    </select>

    <select id="getTradeUserBySpu" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        COUNT(DISTINCT W_ORDER_DETAILS.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.USER_ID END) RP_CNT
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
    </select>

    <select id="getTradeUser" resultType="map">
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        COUNT(DISTINCT W_ORDER_DETAILS.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='Y' THEN W_ORDER_DETAILS.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN W_ORDER_DETAILS.IS_FP='N' THEN W_ORDER_DETAILS.USER_ID END) RP_CNT
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
    </select>

    <select id="getAvgCsPrice" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        W_ORDER_DETAILS.PRICE,
        W_ORDER_DETAILS.QUANTITY,
        W_ORDER_DETAILS.DISCOUNT,
        NVL(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT,0) GMV,
        W_ORDER_DETAILS.IS_FP,
        W_ORDER_DETAILS.USER_ID
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.USER_ID END) RP_CNT,
        SUM(gmv) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN g1.IS_FP='Y' THEN GMV ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN GMV ELSE 0 END) RP_GMV  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_GMV/g2.TOTAL_CNT,2) END) PRICE,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_GMV/g2.FP_CNT,2) END) FP_PRICE,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_GMV/g2.RP_CNT,2) END) RP_PRICE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getAvgCsPriceBySpu" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        W_ORDER_DETAILS.PRICE,
        W_ORDER_DETAILS.QUANTITY,
        W_ORDER_DETAILS.DISCOUNT,
        NVL(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT,0) GMV,
        W_ORDER_DETAILS.IS_FP,
        W_ORDER_DETAILS.USER_ID
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        JOIN (SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_SPU JOIN W_PRODUCT
        ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID) SPU ON W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND SPU.SPU_WID=#{spuId}
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.USER_ID END) RP_CNT,
        SUM(gmv) TOTAL_GMV,  --总的gmv金额
        SUM(CASE WHEN g1.IS_FP='Y' THEN GMV ELSE 0 END) FP_GMV, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN GMV ELSE 0 END) RP_GMV  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_GMV/g2.TOTAL_CNT,2) END) PRICE,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_GMV/g2.FP_CNT,2) END) FP_PRICE,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_GMV/g2.RP_CNT,2) END) RP_PRICE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>



    <select id="getTotalGmv" resultType="Double">
        SELECT
        SUM(SUM (W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)) TOTAL_GMV
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.MONTH &gt;= #{startDt}
        AND W_DATE.MONTH &lt;= #{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
    </select>

    <select id="getTotalTradeUser" resultType="Double">
        SELECT
        sum(COUNT(DISTINCT W_ORDER_DETAILS.USER_ID)) TOTAL_CNT
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.MONTH &gt;= #{startDt}
        AND W_DATE.MONTH &lt;= #{endDt}
        GROUP BY W_DATE.DAY_SHORT_NAME
    </select>

    <select id="getTotalAvgPrice" resultType="Double">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        W_ORDER_DETAILS.PRICE,
        W_ORDER_DETAILS.QUANTITY,
        W_ORDER_DETAILS.DISCOUNT,
        NVL(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT,0) GMV,
        W_ORDER_DETAILS.USER_ID
        FROM
        W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDER_DETAILS.VALID_STATUS = 1
        AND W_DATE.month &gt;= #{startDt}
        AND W_DATE.month &lt;= #{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        SUM(gmv) TOTAL_GMV
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        AVG((CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_GMV/g2.TOTAL_CNT,2) END)) PRICE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getAvgOrderPrice" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        NVL(W_ORDERS.REAL_FEE,0) FEE,
        W_ORDERS.IS_FP,
        W_ORDERS.USER_ID
        FROM
        W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDERS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.USER_ID END) RP_CNT,
        SUM(FEE) TOTAL_FEE,
        SUM(CASE WHEN g1.IS_FP='Y' THEN FEE ELSE 0 END) FP_FEE, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN FEE ELSE 0 END) RP_FEE  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_FEE/g2.TOTAL_CNT,2) END) PRICE,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_FEE/g2.FP_CNT,2) END) FP_PRICE,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_FEE/g2.RP_CNT,2) END) RP_PRICE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getAvgOrderQuantity" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        NVL(W_ORDERS.QUANTITY,0) QTT,
        W_ORDERS.IS_FP,
        W_ORDERS.USER_ID
        FROM
        W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDERS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.USER_ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.USER_ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.USER_ID END) RP_CNT,
        SUM(QTT) TOTAL_QTT,
        SUM(CASE WHEN g1.IS_FP='Y' THEN QTT ELSE 0 END) FP_QTT, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN QTT ELSE 0 END) RP_QTT  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_QTT/g2.TOTAL_CNT,2) END) ORDER_QTT,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_QTT/g2.FP_CNT,2) END) FP_ORDER_QTT,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_QTT/g2.RP_CNT,2) END) RP_ORDER_QTT
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getAvgPiecePrice" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        NVL(W_ORDERS.REAL_FEE,0) FEE,
        W_ORDERS.IS_FP,
        W_ORDERS.QUANTITY
        FROM
        W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDERS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        SUM(g1.QUANTITY) TOTAL_QTT,
        SUM(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.QUANTITY END) FP_QTT,
        SUM(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.QUANTITY END) RP_QTT,
        SUM(FEE) TOTAL_FEE,
        SUM(CASE WHEN g1.IS_FP='Y' THEN FEE ELSE 0 END) FP_FEE, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN FEE ELSE 0 END) RP_FEE  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_QTT=0 THEN 0 ELSE TRUNC(g2.TOTAL_FEE / g2.TOTAL_QTT,2) END) TOTAL_UP,
        (CASE WHEN g2.FP_QTT=0 THEN 0 ELSE TRUNC(g2.FP_FEE / g2.FP_QTT,2) END) FP_UP,
        (CASE WHEN g2.RP_QTT=0 THEN 0 ELSE TRUNC(g2.RP_FEE / g2.RP_QTT,2) END) RP_UP
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getAvgJoinRate" resultType="map">
        WITH g1 as(
        SELECT
        W_DATE.DAY_SHORT_NAME PERIOD_NAME,
        NVL(W_ORDERS.QUANTITY,0) QTT,
        W_ORDERS.IS_FP,
        W_ORDERS.ID
        FROM
        W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
        WHERE
        W_ORDERS.VALID_STATUS = 1
        AND W_DATE.ROW_WID &gt;=#{startDt}
        AND W_DATE.ROW_WID &lt;=#{endDt}
        ),
        g2 as(
        SELECT
        g1.PERIOD_NAME,
        COUNT(DISTINCT g1.ID) TOTAL_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='Y' THEN g1.ID END) FP_CNT,
        COUNT(DISTINCT CASE WHEN g1.IS_FP='N' THEN g1.ID END) RP_CNT,
        SUM(QTT) TOTAL_QTT,
        SUM(CASE WHEN g1.IS_FP='Y' THEN QTT ELSE 0 END) FP_QTT, --首购金额
        SUM(CASE WHEN g1.IS_FP='N' THEN QTT ELSE 0 END) RP_QTT  --复购金额
        FROM g1
        GROUP BY g1.PERIOD_NAME
        )
        SELECT
        g2.PERIOD_NAME,
        (CASE WHEN g2.TOTAL_CNT=0 THEN 0 ELSE TRUNC(g2.TOTAL_QTT / g2.TOTAL_CNT,2) END) JOIN_RATE,
        (CASE WHEN g2.FP_CNT=0 THEN 0 ELSE TRUNC(g2.FP_QTT / g2.FP_CNT,2) END) FP_JOIN_RATE,
        (CASE WHEN g2.RP_CNT=0 THEN 0 ELSE TRUNC(g2.RP_QTT / g2.RP_CNT,2) END) RP_JOIN_RATE
        FROM g2 ORDER BY g2.PERIOD_NAME ASC
    </select>

    <select id="getSummaryKpiInfo" resultMap="kpiSummeryMap">
        SELECT
        SUM(W_ORDERS.REAL_FEE) GMV,  --gmv
        COUNT(DISTINCT W_ORDERS.USER_ID) UCNT,  --用户数
        (CASE WHEN
        COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
        TRUNC(SUM(W_ORDERS.REAL_FEE)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) UPRICE, --客单价
        COUNT(W_ORDERS.ID) PCNT, --订单数
        (CASE WHEN COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
        TRUNC(COUNT(W_ORDERS.ID)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) FREQ, --购买频率
        TRUNC(AVG(W_ORDERS.REAL_FEE),2) PRICE,  --订单价
        (CASE WHEN COUNT(W_ORDERS.ID)=0 THEN 0 ELSE
        TRUNC(SUM(W_ORDERS.QUANTITY)/COUNT(W_ORDERS.ID),2) END) JOINRATE, --连带率
        (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
        TRUNC(SUM(W_ORDERS.REAL_FEE)/SUM(W_ORDERS.QUANTITY),2) END) SPRICE  --件单价
        FROM
        W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
        <if test="joinInfo != null and joinInfo != ''">
            ${joinInfo}
        </if>
        WHERE
        W_ORDERS.VALID_STATUS = 1
        <if test="whereInfo != null and whereInfo != ''">
            ${whereInfo}
        </if>
    </select>
</mapper>
