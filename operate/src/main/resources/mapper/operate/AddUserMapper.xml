<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.AddUserMapper">

    <resultMap id="base" type="com.linksteady.operate.domain.AddUserHead">
        <result column="id" jdbcType="DECIMAL" property="id"/>
        <result column="send_type" jdbcType="VARCHAR" property="sendType"/>
        <result column="apply_user_cnt" jdbcType="DECIMAL" property="applyUserCnt"/>
        <result column="apply_pass_cnt" jdbcType="DECIMAL" property="applyPassCnt"/>
        <result column="apply_pass_rate" jdbcType="DECIMAL" property="applyPassRate"/>
        <result column="task_start_dt" jdbcType="TIMESTAMP" property="taskStartDt"/>
        <result column="task_status" jdbcType="VARCHAR" property="taskStatus"/>
        <result column="region_id" jdbcType="VARCHAR" property="regionId"/>
        <result column="region_name" jdbcType="VARCHAR" property="regionName"/>
        <result column="source_id" jdbcType="VARCHAR" property="sourceId"/>
        <result column="source_name" jdbcType="VARCHAR" property="sourceName"/>
        <result column="daily_user_cnt" jdbcType="DECIMAL" property="dailyUserCnt"/>
        <result column="daily_apply_rate" jdbcType="VARCHAR" property="dailyApplyRate"/>
        <result column="daily_add_user_cnt" jdbcType="DECIMAL" property="dailyAddUserCnt"/>
        <result column="daily_wait_days" jdbcType="DECIMAL" property="dailyWaitDays"/>
        <result column="daily_add_total" jdbcType="DECIMAL" property="dailyAddTotal"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
        <result column="contactway_id" jdbcType="VARCHAR" property="contactWayId"/>
        <result column="contactway_url" jdbcType="VARCHAR" property="contactWayUrl"/>
        <result column="sms_content" jdbcType="VARCHAR" property="smsContent"/>
        <result column="wait_user_cnt" jdbcType="DECIMAL" property="waitUserCnt"/>
        <result column="delivered_user_cnt" jdbcType="DECIMAL" property="deliveredUserCnt"/>
    </resultMap>

    <resultMap id="paramMap" type="com.linksteady.operate.domain.QywxParam">
        <result column="daily_add_num" jdbcType="DECIMAL" property="dailyAddNum"/>
        <result column="daily_add_rate" jdbcType="DECIMAL" property="dailyAddRate"/>
    </resultMap>

    <select id="getHeadCount" resultType="int">
        select count(1) from uo_qywx_add_user_header
    </select>

    <select id="getHeadPageList" resultMap="base">
        select id,
            task_name,
            apply_user_cnt,
            apply_pass_cnt,
            apply_pass_rate,
            task_start_dt,
            task_status,
            send_type,
            delivered_user_cnt,
            wait_user_cnt
         from uo_qywx_add_user_header
        order by insert_dt desc
        limit #{limit} offset #{offset}
    </select>

    <insert id="saveHeadData">
        <selectKey resultType="java.lang.Integer" order="BEFORE" keyProperty="id">
            select nextval('qywx_add_user_header_id_seq'::regclass)
        </selectKey>
        insert into uo_qywx_add_user_header(id, send_type, task_status, task_name, region_id, region_name, source_id, source_name)
        values (#{id}, #{sendType}, 'edit', #{taskName}, #{regionId}, #{regionName}, #{sourceId}, #{sourceName})
    </insert>

    <delete id="deleteHead">
        delete from uo_qywx_add_user_header where id = #{id}::integer
    </delete>

    <select id="getHeadById" resultMap="base">
        select * from uo_qywx_add_user_header where id = #{id}
    </select>

    <update id="editConfig">
        update uo_qywx_add_user_config set (send_type, user_value, life_cycle, path_active, user_growth, add_user_method, is_channel, is_product, is_coupon, is_qrcode, qr_id, sms_content) = (#{sendType}, #{userValue}, #{lifeCycle}, #{pathActive}, #{userGrowth}, #{addUserMethod}, #{isChannel}::integer, #{isProduct}::integer, #{isCoupon}::integer, #{isQrcode}, #{qrId}::integer, #{smsContent})
        where id = #{id}::integer
    </update>

    <resultMap id="treeMap" type="com.linksteady.common.domain.Ztree">
        <result column="id" jdbcType="VARCHAR" property="id"></result>
        <result column="pid" jdbcType="VARCHAR" property="pId"></result>
        <result column="name" jdbcType="VARCHAR" property="name"></result>
    </resultMap>

    <select id="getSource" resultType="map">
        select source_id id, source_name as name from w_source
    </select>

    <insert id="insertAddUserList">
       insert into uo_qywx_add_user_list
       (
          head_id,user_id,phone_num,is_push,push_status,insert_dt,update_dt
       )
       select
          #{headId},id,mobile,0,'X',now(),now()
          from w_users where valid_status=1
            <if test="whereInfo != null and whereInfo != ''">
                ${whereInfo}
            </if>
    </insert>

    <select id="getAddUserListCount" resultType="int">
         select count(*) from uo_qywx_add_user_list where head_id= #{headId}
    </select>

    <select id="getQywxParam" resultMap="paramMap">
         select daily_add_num,daily_add_rate from uo_qywx_param limit 1
    </select>

    <update id="updatePushParameter">
        update uo_qywx_add_user_header set
          apply_user_cnt=#{totalNum},
          wait_user_cnt=#{totalNum},
          daily_user_cnt=#{defaultAddCount},
          daily_apply_rate=#{defaultApplyRate},
          daily_add_user_cnt=#{dailyAddNum},
          daily_wait_days=#{waitDays},
          daily_add_total=#{addTotal}
       where id= #{headId}
    </update>

    <update id="updateSmsContentAndContactWay">
        update uo_qywx_add_user_header set sms_content = #{smsContent}, contactway_id =  #{contactWayId}::integer, contactway_url = #{contactWayUrl}
        where id= #{headId}::integer
    </update>

    <update id="updateHeadVersion">
        update uo_qywx_add_user_header set version=version+1 where id= #{headId} and version=#{version}
    </update>

    <select id="getRunningSchedule" resultType="int">
        select count(*) from uo_qywx_add_user_schedule where schedule_date_wid=#{currentDay} and status='doing'
    </select>

    <insert id="saveAddUserSchedule" useGeneratedKeys="true" keyProperty="scheduleId" keyColumn="schedule_id">
       insert into uo_qywx_add_user_schedule
       (
                head_id,
                apply_num,
                apply_rate,
                wait_add_num,
                remain_user_cnt,
                wait_days,
                remain_add_num,
                contactway_id,
                state,
                contactway_url,
                sms_content,
                status,
                insert_dt,
                insert_by,
                update_dt,
                update_by,
                schedule_date_wid,
                schedule_date,
                apply_pass_num
       ) values(
                #{headId},
                #{applyNum},
                #{applyRate},
                #{waitAddNum},
                #{remainUserCnt},
                #{waitDays},
                #{remainAddNum},
                #{contactwayId},
                #{state},
                #{contactwayUrl},
                #{smsContent},
                #{status},
                #{insertDt},
                #{insertBy},
                #{updateDt},
                #{updateBy},
                #{scheduleDateWid},
                #{scheduleDate},
                #{applyPassNum}
       )
    </insert>

    <update id="updateAddUserList">
        update uo_qywx_add_user_list set schedule_id=#{scheduleId} where id in (
          select id from uo_qywx_add_user_list
          where head_id=#{headId} and schedule_id is null  order by id asc limit #{targetNum}
        )

    </update>

    <update id="updateHeadWaitUserCnt">
           update uo_qywx_add_user_header set
             wait_user_cnt=#{afterWaitNum},
             delivered_user_cnt=#{afterFinishNum},
             task_status='doing',
             update_dt=now(),
             update_by=#{opUserName}
           where
             id=#{headId}
    </update>

    <insert id="pushToPushListLarge">
        INSERT INTO uo_op_push_list_large(
            PUSH_CONTENT,
            PUSH_STATUS,
            SOURCE_CODE,
            SOURCE_ID,
            USER_PHONE,
            IS_PUSH,
            PUSH_SCHEDULING_DATE
        ) select
            uo_qywx_add_user_schedule.sms_content,
            'P',
            'ADDUSER',
            uo_qywx_add_user_list.id,
            uo_qywx_add_user_list.phone_num,
            '0',
            #{scheduleDate}
        from uo_qywx_add_user_list join uo_qywx_add_user_schedule
           on uo_qywx_add_user_list.schedule_id=uo_qywx_add_user_schedule.schedule_id
          and uo_qywx_add_user_list.head_id=uo_qywx_add_user_schedule.head_id
          and uo_qywx_add_user_schedule.schedule_id=#{scheduleId}
          and uo_qywx_add_user_schedule.head_id=#{headId}
          and uo_qywx_add_user_list.is_push='0'
    </insert>

    <update id="updatePushResult">
        update uo_qywx_add_user_list set
              push_status = t4.push_status,
              push_date   = t4.push_date,
              is_push     = t4.is_push
        from uo_op_push_list_large as t4
        where id = t4.source_id and t4.source_code = 'ADDUSER' and uo_qywx_add_user_list.insert_dt::date>=(current_date-3)
    </update>

    <update id="updateScheduleToDone">
        update uo_qywx_add_user_schedule set status='done' where
          status='doing' and not exists(
              select 1 from uo_qywx_add_user_list l
              where l.head_id=uo_qywx_add_user_schedule.head_id
                and l.schedule_id=uo_qywx_add_user_schedule.schedule_id
                and l.is_push='0'
          )
    </update>

    <update id="updateHeadToStop">
        update uo_qywx_add_user_header set task_status='stop' where
          task_status='doing' and not exists (
             select 1 from uo_qywx_add_user_schedule s where s.head_id=uo_qywx_add_user_header.id and s.status='doing')
    </update>

    <update id="updateHeadToDone">
        update uo_qywx_add_user_header set task_status='done' where
          task_status='doing' and wait_user_cnt=0 and not exists (
             select 1 from uo_qywx_add_user_schedule s where s.head_id=uo_qywx_add_user_header.id and s.status='doing')
    </update>


    <select id="getSendAndApplyData" resultType="map">
        select schedule_date_wid date, apply_num applyNum, apply_pass_num applyPassNum, schedule_id scheduleId from uo_qywx_add_user_schedule where head_id = #{headId}::integer
        order by schedule_date_wid asc
    </select>

    <select id="getStatisApplyData" resultType="map">
        select statis_day statisDay, stats_pass_num num, statis_pass_rate rate from uo_qywx_add_user_effect where head_id = #{headId}::integer and schedule_id = #{scheduleId}::integer
        order by statis_day asc
    </select>
</mapper>