<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.SmsTemplateMapper">
    <resultMap id="BaseResultMap" type="com.linksteady.operate.domain.SmsTemplate">
        <!--
          WARNING - @mbg.generated
        -->
        <result column="SMS_CODE" jdbcType="VARCHAR" property="smsCode" />
        <result column="SMS_CONTENT" jdbcType="VARCHAR" property="smsContent" />
        <result column="IS_COUPON_URL" jdbcType="VARCHAR" property="isCouponUrl" />
        <result column="IS_COUPON_NAME" jdbcType="VARCHAR" property="isCouponName" />
        <result column="SMS_NAME" jdbcType="VARCHAR" property="smsName" />
        <result column="IS_PRODUCT_NAME" jdbcType="VARCHAR" property="isProductName" />
        <result column="IS_PRODUCT_URL" jdbcType="VARCHAR" property="isProductUrl" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="USER_VALUE" jdbcType="VARCHAR" property="userValue" />
        <result column="LIFE_CYCLE" jdbcType="VARCHAR" property="lifeCycle" />
        <result column="PATH_ACTIVE" jdbcType="VARCHAR" property="pathActive" />
    </resultMap>

    <select id="getSmsTemplateList" resultMap="BaseResultMap">
        SELECT * FROM(
        SELECT A.*,ROWNUM RN FROM
        (SELECT
        SMS_CODE, SMS_CONTENT, IS_COUPON_NAME, SMS_NAME, IS_PRODUCT_NAME, IS_PRODUCT_URL, REMARK, USER_VALUE, LIFE_CYCLE, PATH_ACTIVE
        FROM UO_OP_SMS_TEMPLATE
        where 1=1
        <if test="smsTemplate.userValue != null and smsTemplate.userValue != ''">
            and USER_VALUE like concat('%', concat(#{smsTemplate.userValue}, '%'))
        </if>
        <if test="smsTemplate.lifeCycle != null and smsTemplate.lifeCycle != ''">
            and LIFE_CYCLE like concat('%', concat(#{smsTemplate.lifeCycle}, '%'))
        </if>
        <if test="smsTemplate.pathActive != null and smsTemplate.pathActive != ''">
            and PATH_ACTIVE like concat('%', concat(#{smsTemplate.pathActive}, '%'))
        </if>
        order by to_number(SMS_CODE) desc
        ) A  WHERE ROWNUM &lt;=#{endRow}
        ) WHERE RN &gt;=#{startRow}
    </select>

    <select id="getTotalCount" resultType="int">
        select count(1) from UO_OP_SMS_TEMPLATE
        where 1=1
        <if test="smsTemplate.userValue != null and smsTemplate.userValue != ''">
            and USER_VALUE like concat('%', concat(#{smsTemplate.userValue}, '%'))
        </if>
        <if test="smsTemplate.lifeCycle != null and smsTemplate.lifeCycle != ''">
            and LIFE_CYCLE like concat('%', concat(#{smsTemplate.lifeCycle}, '%'))
        </if>
        <if test="smsTemplate.pathActive != null and smsTemplate.pathActive != ''">
            and PATH_ACTIVE like concat('%', concat(#{smsTemplate.pathActive}, '%'))
        </if>
    </select>

    <insert id="saveSmsTemplate">
     INSERT INTO UO_OP_SMS_TEMPLATE(SMS_CODE, SMS_CONTENT, IS_COUPON_URL, IS_COUPON_NAME, SMS_NAME, IS_PRODUCT_NAME, IS_PRODUCT_URL, REMARK, USER_VALUE, LIFE_CYCLE, PATH_ACTIVE)
     VALUES(SEQ_SMS_TEMPLATE_CODE.nextval,#{smsContent},#{isCouponUrl},#{isCouponName}, #{smsName}, #{isProductName}, #{isProductUrl}, #{remark}, #{userValue}, #{lifeCycle}, #{pathActive})
  </insert>

    <select id="refrenceCount" resultType="int">
     SELECT COUNT(*) FROM UO_OP_DAILY_TEMPLATE_CONFIG WHERE SMS_CODE=#{smsCode}
  </select>

    <delete id="deleteSmsTemplate">
    delete from UO_OP_SMS_TEMPLATE where SMS_CODE=#{smsCode}
  </delete>

    <select id="getSmsTemplate" resultMap="BaseResultMap">
    SELECT
        SMS_CODE, SMS_CONTENT, IS_COUPON_URL, IS_COUPON_NAME, SMS_NAME, IS_PRODUCT_NAME, IS_PRODUCT_URL, REMARK, USER_VALUE, LIFE_CYCLE, PATH_ACTIVE
        FROM UO_OP_SMS_TEMPLATE WHERE SMS_CODE=#{smsCode}
  </select>

    <update id="update" parameterType="com.linksteady.operate.domain.SmsTemplate">
      update UO_OP_SMS_TEMPLATE
      set SMS_CONTENT = #{smsTemplate.smsContent}, IS_COUPON_URL = #{smsTemplate.isCouponUrl}, IS_COUPON_NAME = #{smsTemplate.isCouponName}, SMS_NAME = #{smsTemplate.smsName}, IS_PRODUCT_NAME = #{smsTemplate.isProductName}, IS_PRODUCT_URL = #{smsTemplate.isProductUrl}, REMARK = #{smsTemplate.remark},
      USER_VALUE = #{smsTemplate.userValue}, LIFE_CYCLE = #{smsTemplate.lifeCycle}, PATH_ACTIVE = #{smsTemplate.pathActive}
      where SMS_CODE = #{smsTemplate.smsCode}
    </update>

    <select id="getTemplateByGroupId" resultMap="BaseResultMap">
        select distinct t1.* from UO_OP_SMS_TEMPLATE t1, UO_OP_DAILY_TEMPLATE_CONFIG t2
        where (t1.USER_VALUE like concat('%', concat(t2.USER_VALUE, '%'))
         or t1.LIFE_CYCLE like concat('%', concat(t2.LIFECYLE, '%'))
         or t1.PATH_ACTIVE like concat('%', concat(t2.PATH_ACTIVE, '%')))
         and t2.GROUP_ID in
         <foreach collection="groupIdList" open="(" close=")" item="item" separator=",">
             #{item}
         </foreach>
         order by to_number(t1.sms_code) desc
    </select>

    <select id="getTemplate" resultMap="BaseResultMap">
        select *
        from (
                 select case when SMS_CODE = #{groupSmsCode} then 1 else 0 end tmp,
                        SMS_CODE,
                        SMS_CONTENT,
                        IS_COUPON_NAME,
                        SMS_NAME,
                        IS_PRODUCT_NAME,
                        IS_PRODUCT_URL,
                        REMARK,
                        USER_VALUE,
                        LIFE_CYCLE,
                        PATH_ACTIVE,
                        IS_COUPON_URL
                 from UO_OP_SMS_TEMPLATE
        ) order by tmp desc, SMS_CODE desc
    </select>

    <select id="getSmsUsedGroupInfo" resultType="string">
        select t2.USER_VALUE || ',' || t2.LIFECYLE || ',' || t2.PATH_ACTIVE
        from UO_OP_SMS_TEMPLATE t1,
             UO_OP_DAILY_TEMPLATE_CONFIG t2
        where t1.SMS_CODE = t2.SMS_CODE
        and t1.SMS_CODE = #{smsCode}
    </select>

    <select id="getGroupValue" resultType="map">
        select listagg(t2.USER_VALUE, ',') within group (order by t1.SMS_CODE) USER_VALUE,listagg(t2.PATH_ACTIVE, ',') within group (order by t1.SMS_CODE) PATH_ACTIVE,listagg(t2.LIFECYLE, ',') within group (order by t1.SMS_CODE) LIFECYLE,t1.SMS_CODE
        from UO_OP_SMS_TEMPLATE t1,
             UO_OP_DAILY_TEMPLATE_CONFIG t2
        where t1.SMS_CODE = t2.SMS_CODE group by t1.SMS_CODE
    </select>
</mapper>