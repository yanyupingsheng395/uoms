<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.SmsTemplateMapper">
    <resultMap id="BaseResultMap" type="com.linksteady.operate.domain.SmsTemplate">
        <result column="SMS_CODE" jdbcType="VARCHAR" property="smsCode" />
        <result column="SMS_CONTENT" jdbcType="VARCHAR" property="smsContent" />
        <result column="IS_COUPON_URL" jdbcType="VARCHAR" property="isCouponUrl" />
        <result column="IS_COUPON_NAME" jdbcType="VARCHAR" property="isCouponName" />
        <result column="IS_PRODUCT_NAME" jdbcType="VARCHAR" property="isProductName" />
        <result column="IS_PRODUCT_URL" jdbcType="VARCHAR" property="isProductUrl" />
        <result column="REMARK" jdbcType="VARCHAR" property="remark" />
        <result column="create_dt" jdbcType="TIMESTAMP" property="createDt" />
        <result column="update_dt" jdbcType="TIMESTAMP" property="updateDt" />
        <result column="used_days" jdbcType="DECIMAL" property="usedDays" />
        <result column="ref_cnt" jdbcType="DECIMAL" property="refCnt" />
        <result column="currentFlag" jdbcType="VARCHAR" property="currentFlag" />
        <result column="op_dt" jdbcType="TIMESTAMP" property="opDt" />
    </resultMap>

    <select id="selectSmsTemplateListWithGroup" resultMap="BaseResultMap">
        select
            t1.sms_code,
            case when t2.sms_code is not null then '1' else '0' end currentFlag,
            sms_content,
            is_coupon_name,
            sms_name,
            is_product_name,
            is_product_url,
            remark,
            create_dt,
            update_dt,
            case when update_dt is null then create_dt else update_dt end op_dt,
            (date_part('day', now() - cast(create_dt as timestamp)) + 1)  used_days,
            t3.ref_cnt
        from uo_op_sms_template t1 left join
        (select sms_code from uo_op_daily_template_config where group_id = #{groupId}) t2 on t1.sms_code=t2.sms_code
        left join
        (select sms_code,count(distinct user_value||path_active||lifecycle) ref_cnt from uo_op_daily_template_config where sms_code is not null group by sms_code) t3
        on t1.sms_code=t3.sms_code
        order by currentFlag desc, ref_cnt desc nulls last,op_dt desc
        limit #{limit} offset #{offset}
    </select>

    <select id="getTotalCount" resultType="int">
        select count(1) from UO_OP_SMS_TEMPLATE
    </select>

    <insert id="saveSmsTemplate">
     INSERT INTO UO_OP_SMS_TEMPLATE(SMS_CONTENT, IS_COUPON_URL, IS_COUPON_NAME, IS_PRODUCT_NAME, IS_PRODUCT_URL, REMARK)
     VALUES(#{smsContent},#{isCouponUrl},#{isCouponName}, #{isProductName}, #{isProductUrl}, #{remark})
  </insert>

    <select id="refrenceCount" resultType="int">
     SELECT COUNT(*) FROM UO_OP_DAILY_TEMPLATE_CONFIG WHERE SMS_CODE=#{smsCode}
  </select>

    <delete id="deleteSmsTemplate">
    delete from UO_OP_SMS_TEMPLATE where SMS_CODE=#{smsCode}
  </delete>

    <select id="getSmsTemplate" resultMap="BaseResultMap">
    SELECT
        SMS_CODE, SMS_CONTENT, IS_COUPON_URL, IS_COUPON_NAME, SMS_NAME, IS_PRODUCT_NAME, IS_PRODUCT_URL, REMARK
        FROM UO_OP_SMS_TEMPLATE WHERE SMS_CODE=#{smsCode}
  </select>

    <update id="update" parameterType="com.linksteady.operate.domain.SmsTemplate">
      update UO_OP_SMS_TEMPLATE
      set SMS_CONTENT = #{smsTemplate.smsContent},
            IS_COUPON_URL = #{smsTemplate.isCouponUrl},
            IS_COUPON_NAME = #{smsTemplate.isCouponName},
            IS_PRODUCT_NAME = #{smsTemplate.isProductName},
            IS_PRODUCT_URL = #{smsTemplate.isProductUrl},
            REMARK = #{smsTemplate.remark},
            UPDATE_DT = now()
      where SMS_CODE = #{smsTemplate.smsCode}
    </update>

    <select id="getSmsUsedGroupInfo" resultType="string">
        select distinct t2.USER_VALUE || ',' || t2.LIFECYCLE || ',' || t2.PATH_ACTIVE
        from UO_OP_SMS_TEMPLATE t1,
             UO_OP_DAILY_TEMPLATE_CONFIG t2
        where t1.SMS_CODE = t2.SMS_CODE
          and t1.SMS_CODE = #{smsCode}
    </select>

    <select id="selectSmsTemplateList" resultMap="BaseResultMap">
        select t1.sms_code,
               sms_content,
               is_coupon_name,
               is_product_name,
               is_product_url,
               remark,
               create_dt,
               update_dt,
               case when update_dt is null then create_dt else update_dt end op_dt,
               (date_part('day', now() - cast(create_dt as timestamp)) + 1)  used_days,
               ref_cnt
        from uo_op_sms_template t1 left join
             (select sms_code,count(distinct user_value||path_active||lifecycle) ref_cnt from uo_op_daily_template_config where sms_code is not null group by sms_code) t2
             on t1.sms_code=t2.sms_code
        order by ref_cnt desc nulls last,op_dt desc
        limit #{limit} offset #{offset}
    </select>

    <update id="updateSmsCodeNull">
        update UO_OP_DAILY_TEMPLATE_CONFIG
        set SMS_CODE = null
        where SMS_CODE = #{smsCode}
    </update>
</mapper>