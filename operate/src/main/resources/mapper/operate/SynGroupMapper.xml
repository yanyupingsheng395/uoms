<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.SynGroupMapper">

    <resultMap id="datePeriodKpiMap" type="com.linksteady.operate.domain.DatePeriodKpi">
        <result column="MIN_MONTH" property="minPeriod" jdbcType="DECIMAL"></result>
        <result column="BUY_MONTH" property="buyPeriod" jdbcType="DECIMAL"></result>
        <result column="C_USERS" property="kpiValue" jdbcType="DECIMAL"></result>
        <result column="UPRICE" property="uprice" jdbcType="DECIMAL"></result>
    </resultMap>

    <select id="getRetentionDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        --获取用户在此区间内的最早购买月份
        G2 AS(
        SELECT
        MIN(BUY_MONTH) MIN_MONTH,
        USER_ID
        FROM G1
        WHERE G1.IS_FP = 'Y'
        GROUP BY USER_ID
        ),
        G3 AS(
        --如果用户一个月有多单，则只计算一次
        SELECT
        DISTINCT
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        ),
        RT AS(
        SELECT
        MIN_MONTH,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN 1 ELSE 0 END) MONTH_0,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN 1 ELSE 0 END) MONTH_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN 1 ELSE 0 END) MONTH_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN 1 ELSE 0 END) MONTH_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN 1 ELSE 0 END) MONTH_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN 1 ELSE 0 END) MONTH_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN 1 ELSE 0 END) MONTH_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN 1 ELSE 0 END) MONTH_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN 1 ELSE 0 END) MONTH_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN 1 ELSE 0 END) MONTH_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN 1 ELSE 0 END) MONTH_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN 1 ELSE 0 END) MONTH_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN 1 ELSE 0 END) MONTH_12
        FROM G3 GROUP  BY MIN_MONTH
        ),
        RT2 AS
        (SELECT MIN_MONTH MONTH_ID,
        MONTH_0 MONTH0,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_1/MONTH_0::numeric,4)*100 END) MONTH1,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_2/MONTH_0::numeric,4)*100 END) MONTH2,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_3/MONTH_0::numeric,4)*100 END) MONTH3,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_4/MONTH_0::numeric,4)*100 END) MONTH4,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_5/MONTH_0::numeric,4)*100 END) MONTH5,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_6/MONTH_0::numeric,4)*100 END) MONTH6,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_7/MONTH_0::numeric,4)*100 END) MONTH7,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_8/MONTH_0::numeric,4)*100 END) MONTH8,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_9/MONTH_0::numeric,4)*100 END) MONTH9,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_10/MONTH_0::numeric,4)*100 END) MONTH10,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_11/MONTH_0::numeric,4)*100 END) MONTH11,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND(MONTH_12/MONTH_0::numeric,4)*100 END) MONTH12
        FROM RT)
        SELECT
        DT.MONTH_ID,
        coalesce(RT2.MONTH0,0) TOTAL_USER,
        coalesce(RT2.MONTH1,0) MONTH1,
        coalesce(RT2.MONTH2,0) MONTH2,
        coalesce(RT2.MONTH3,0) MONTH3,
        coalesce(RT2.MONTH4,0) MONTH4,
        coalesce(RT2.MONTH5,0) MONTH5,
        coalesce(RT2.MONTH6,0) MONTH6,
        coalesce(RT2.MONTH7,0) MONTH7,
        coalesce(RT2.MONTH8,0) MONTH8,
        coalesce(RT2.MONTH9,0) MONTH9,
        coalesce(RT2.MONTH10,0) MONTH10,
        coalesce(RT2.MONTH11,0) MONTH11,
        coalesce(RT2.MONTH12,0) MONTH12
        FROM RT2 RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;= #{paramVO.startDt}::integer AND MONTH_ID &lt;= #{paramVO.endDt}::integer) DT
        ON RT2.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <select id="getRetentionNMonth" resultType="com.linksteady.operate.domain.DatePeriodKpi">
        WITH G1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}
        WHERE
        T.ORDER_DT_WID=DT.ROW_WID
        AND T.VALID_STATUS=1
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        --每个用户及其最早购买的月份
        G2 AS(
        SELECT MIN(BUY_MONTH) MIN_MONTH,
        USER_ID
        FROM G1
        WHERE G1.IS_FP = 'Y'
        GROUP BY USER_ID
        ),
        --每个用户 及其购买月份
        G3 AS(
        SELECT BUY_MONTH,
        USER_ID
        FROM G1
        GROUP BY BUY_MONTH,USER_ID
        )
        SELECT G2.MIN_MONTH,G3.BUY_MONTH,COUNT(*) C_USERS FROM  G2,G3
        WHERE G2.USER_ID = G3.USER_ID
        GROUP BY G2.MIN_MONTH,G3.BUY_MONTH
        ORDER BY G2.MIN_MONTH,G3.BUY_MONTH
    </select>

    <select id="getLossUserRateDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        IS_FP
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        --如果用户一个月有多单，则只计算一次
        SELECT
        DISTINCT
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        ),
        RT AS(
        SELECT
        MIN_MONTH,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN 1 ELSE 0 END) MONTH_0,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN 1 ELSE 0 END) MONTH_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN 1 ELSE 0 END) MONTH_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN 1 ELSE 0 END) MONTH_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN 1 ELSE 0 END) MONTH_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN 1 ELSE 0 END) MONTH_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN 1 ELSE 0 END) MONTH_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN 1 ELSE 0 END) MONTH_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN 1 ELSE 0 END) MONTH_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN 1 ELSE 0 END) MONTH_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN 1 ELSE 0 END) MONTH_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN 1 ELSE 0 END) MONTH_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN 1 ELSE 0 END) MONTH_12
        FROM G3 GROUP  BY MIN_MONTH
        ),
        RT2 AS
        (SELECT MIN_MONTH MONTH_ID,
        MONTH_0 MONTH0,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_1)/MONTH_0::numeric,4)*100 END) MONTH1,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_2)/MONTH_0::numeric,4)*100 END) MONTH2,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_3)/MONTH_0::numeric,4)*100 END) MONTH3,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_4)/MONTH_0::numeric,4)*100 END) MONTH4,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_5)/MONTH_0::numeric,4)*100 END) MONTH5,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_6)/MONTH_0::numeric,4)*100 END) MONTH6,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_7)/MONTH_0::numeric,4)*100 END) MONTH7,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_8)/MONTH_0::numeric,4)*100 END) MONTH8,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_9)/MONTH_0::numeric,4)*100 END) MONTH9,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_10)/MONTH_0::numeric,4)*100 END) MONTH10,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_11)/MONTH_0::numeric,4)*100 END) MONTH11,
        (CASE WHEN MONTH_0=0 THEN 0 ELSE ROUND((MONTH_0 - MONTH_12)/MONTH_0::numeric,4)*100 END) MONTH12
        FROM RT)
        SELECT
        DT.MONTH_ID,
        coalesce(RT2.MONTH0,0) TOTAL_USER,
        coalesce(RT2.MONTH1,0) MONTH1,
        coalesce(RT2.MONTH2,0) MONTH2,
        coalesce(RT2.MONTH3,0) MONTH3,
        coalesce(RT2.MONTH4,0) MONTH4,
        coalesce(RT2.MONTH5,0) MONTH5,
        coalesce(RT2.MONTH6,0) MONTH6,
        coalesce(RT2.MONTH7,0) MONTH7,
        coalesce(RT2.MONTH8,0) MONTH8,
        coalesce(RT2.MONTH9,0) MONTH9,
        coalesce(RT2.MONTH10,0) MONTH10,
        coalesce(RT2.MONTH11,0) MONTH11,
        coalesce(RT2.MONTH12,0) MONTH12
        FROM RT2 RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;= #{paramVO.startDt}::integer AND MONTH_ID &lt;= #{paramVO.endDt}::integer) DT
        ON RT2.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <select id="getLossUserMonth" resultMap="datePeriodKpiMap">
        WITH G1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}  WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        G3 AS(
        SELECT BUY_MONTH,
        USER_ID
        FROM G1
        GROUP BY BUY_MONTH,USER_ID
        ),
        G4 AS(
        SELECT MIN_MONTH,COUNT(USER_ID) BEGIN_USERS FROM G2 GROUP BY MIN_MONTH
        ),
        G5 AS(
        SELECT
        G2.MIN_MONTH,
        G3.BUY_MONTH,
        COUNT(*) RETAIN_USERS
        FROM  G2,G3
        WHERE G2.USER_ID = G3.USER_ID
        GROUP BY G2.MIN_MONTH,G3.BUY_MONTH)
        SELECT
            G5.MIN_MONTH,
            G5.BUY_MONTH,
            (CASE WHEN G5.MIN_MONTH=G5.BUY_MONTH THEN G4.BEGIN_USERS ELSE (G4.BEGIN_USERS-RETAIN_USERS) END) C_USERS
        FROM G5,G4 WHERE G5.MIN_MONTH=G4.MIN_MONTH
        ORDER BY G5.MIN_MONTH,G5.BUY_MONTH
    </select>

    <!-- 按间隔月看留存用户数 -->
    <select id="getRetainUserCountDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(
        SELECT
        MIN(BUY_MONTH) MIN_MONTH,
        USER_ID
        FROM G1
        WHERE G1.IS_FP = 'Y'
        GROUP BY USER_ID
        ),
        G3 AS(
        SELECT
        DISTINCT
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN 1 ELSE 0 END) MONTH_0,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN 1 ELSE 0 END) MONTH_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN 1 ELSE 0 END) MONTH_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN 1 ELSE 0 END) MONTH_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN 1 ELSE 0 END) MONTH_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN 1 ELSE 0 END) MONTH_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN 1 ELSE 0 END) MONTH_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN 1 ELSE 0 END) MONTH_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN 1 ELSE 0 END) MONTH_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN 1 ELSE 0 END) MONTH_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN 1 ELSE 0 END) MONTH_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN 1 ELSE 0 END) MONTH_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN 1 ELSE 0 END) MONTH_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        coalesce(RT.MONTH_0,0) TOTAL_USER,
        coalesce(RT.MONTH_1,0) MONTH1,
        coalesce(RT.MONTH_2,0) MONTH2,
        coalesce(RT.MONTH_3,0) MONTH3,
        coalesce(RT.MONTH_4,0) MONTH4,
        coalesce(RT.MONTH_5,0) MONTH5,
        coalesce(RT.MONTH_6,0) MONTH6,
        coalesce(RT.MONTH_7,0) MONTH7,
        coalesce(RT.MONTH_8,0) MONTH8,
        coalesce(RT.MONTH_9,0) MONTH9,
        coalesce(RT.MONTH_10,0) MONTH10,
        coalesce(RT.MONTH_11,0) MONTH11,
        coalesce(RT.MONTH_12,0) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID  &gt;= #{paramVO.startDt}::integer AND MONTH_ID  &lt;= #{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <select id="getRetainUserCountNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}
        WHERE
        T.ORDER_DT_WID=DT.ROW_WID
        AND t.valid_status=1
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        g3 as(
        SELECT BUY_MONTH,
        USER_ID
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        )
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,COUNT(*) C_USERS FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH
    </select>

    <select id="getUpriceDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;=#{paramVO.startDt}::integer
        AND DT.MONTH &lt;=#{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        SELECT
        COUNT(DISTINCT G1.USER_ID) USERCNT,
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF,
        SUM(G1.REAL_FEE) U_FEE
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        GROUP BY
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM')))
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN USERCNT ELSE 0 END) USERCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN U_FEE ELSE 0 END) U_FEE,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN USERCNT ELSE 0 END) USERCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN U_FEE ELSE 0 END) U_FEE_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN USERCNT ELSE 0 END) USERCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN U_FEE ELSE 0 END) U_FEE_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN USERCNT ELSE 0 END) USERCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN U_FEE ELSE 0 END) U_FEE_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN USERCNT ELSE 0 END) USERCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN U_FEE ELSE 0 END) U_FEE_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN USERCNT ELSE 0 END) USERCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN U_FEE ELSE 0 END) U_FEE_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN USERCNT ELSE 0 END) USERCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN U_FEE ELSE 0 END) U_FEE_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN USERCNT ELSE 0 END) USERCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN U_FEE ELSE 0 END) U_FEE_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN USERCNT ELSE 0 END) USERCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN U_FEE ELSE 0 END) U_FEE_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN USERCNT ELSE 0 END) USERCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN U_FEE ELSE 0 END) U_FEE_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN USERCNT ELSE 0 END) USERCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN U_FEE ELSE 0 END) U_FEE_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN USERCNT ELSE 0 END) USERCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN U_FEE ELSE 0 END) U_FEE_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN USERCNT ELSE 0 END) USERCNT_12,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN U_FEE ELSE 0 END) U_FEE_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        RT.USERCNT TOTAL_USER,
        (CASE WHEN RT.USERCNT=0 THEN NULL ELSE TRUNC(RT.U_FEE/RT.USERCNT::numeric) END) CURRENT_MONTH,
        (CASE WHEN RT.USERCNT_1=0 THEN NULL ELSE TRUNC(RT.U_FEE_1/RT.USERCNT_1::numeric) END) MONTH1,
        (CASE WHEN RT.USERCNT_2=0 THEN NULL ELSE TRUNC(RT.U_FEE_2/RT.USERCNT_2::numeric) END) MONTH2,
        (CASE WHEN RT.USERCNT_3=0 THEN NULL ELSE TRUNC(RT.U_FEE_3/RT.USERCNT_3::numeric) END) MONTH3,
        (CASE WHEN RT.USERCNT_4=0 THEN NULL ELSE TRUNC(RT.U_FEE_4/RT.USERCNT_4::numeric) END) MONTH4,
        (CASE WHEN RT.USERCNT_5=0 THEN NULL ELSE TRUNC(RT.U_FEE_5/RT.USERCNT_5::numeric) END) MONTH5,
        (CASE WHEN RT.USERCNT_6=0 THEN NULL ELSE TRUNC(RT.U_FEE_6/RT.USERCNT_6::numeric) END) MONTH6,
        (CASE WHEN RT.USERCNT_7=0 THEN NULL ELSE TRUNC(RT.U_FEE_7/RT.USERCNT_7::numeric) END) MONTH7,
        (CASE WHEN RT.USERCNT_8=0 THEN NULL ELSE TRUNC(RT.U_FEE_8/RT.USERCNT_8::numeric) END) MONTH8,
        (CASE WHEN RT.USERCNT_9=0 THEN NULL ELSE TRUNC(RT.U_FEE_9/RT.USERCNT_9::numeric) END) MONTH9,
        (CASE WHEN RT.USERCNT_10=0 THEN NULL ELSE TRUNC(RT.U_FEE_10/RT.USERCNT_10::numeric) END) MONTH10,
        (CASE WHEN RT.USERCNT_11=0 THEN NULL ELSE TRUNC(RT.U_FEE_11/RT.USERCNT_11::numeric) END) MONTH11,
        (CASE WHEN RT.USERCNT_12=0 THEN NULL ELSE TRUNC(RT.U_FEE_12/RT.USERCNT_12::numeric) END) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;=#{paramVO.startDt}::integer AND MONTH_ID &lt;=#{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <!-- 按自然月查看客单价 -->
    <select id="getUpriceNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        t.is_fp,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}  WHERE t.valid_status=1
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        g3 as(
        SELECT BUY_MONTH,
        USER_ID,
        SUM(REAL_FEE) SUM_FEE
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        ),
        g4 as(
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,COUNT(*) C_USERS,SUM(SUM_FEE) C_FEE  FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH)
        SELECT
        MIN_MONTH,
        BUY_MONTH,
        (CASE WHEN C_USERS=0 THEN 0 ELSE TRUNC(C_FEE/C_USERS) END) UPRICE,
        C_USERS
        from g4
    </select>

    <!-- 查看订单价 间隔月 -->
    <select id="getPriceDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        SELECT
        COUNT(*) POCNT, --订单数
        COUNT(DISTINCT G1.USER_ID) USERCNT,
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF,
        SUM(G1.REAL_FEE) U_FEE
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        GROUP BY
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM')))
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN USERCNT ELSE 0 END) USERCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN POCNT ELSE 0 END) POCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN U_FEE ELSE 0 END) U_FEE,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN POCNT ELSE 0 END) POCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN U_FEE ELSE 0 END) U_FEE_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN POCNT ELSE 0 END) POCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN U_FEE ELSE 0 END) U_FEE_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN POCNT ELSE 0 END) POCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN U_FEE ELSE 0 END) U_FEE_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN POCNT ELSE 0 END) POCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN U_FEE ELSE 0 END) U_FEE_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN POCNT ELSE 0 END) POCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN U_FEE ELSE 0 END) U_FEE_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN POCNT ELSE 0 END) POCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN U_FEE ELSE 0 END) U_FEE_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN POCNT ELSE 0 END) POCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN U_FEE ELSE 0 END) U_FEE_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN POCNT ELSE 0 END) POCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN U_FEE ELSE 0 END) U_FEE_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN POCNT ELSE 0 END) POCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN U_FEE ELSE 0 END) U_FEE_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN POCNT ELSE 0 END) POCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN U_FEE ELSE 0 END) U_FEE_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN POCNT ELSE 0 END) POCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN U_FEE ELSE 0 END) U_FEE_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN POCNT ELSE 0 END) POCNT_12,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN U_FEE ELSE 0 END) U_FEE_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        RT.USERCNT TOTAL_USER,  --用户数
        (CASE WHEN RT.POCNT=0 THEN NULL ELSE TRUNC(RT.U_FEE/RT.POCNT::numeric) END) CURRENT_MONTH, --订单价
        (CASE WHEN RT.POCNT_1=0 THEN NULL ELSE TRUNC(RT.U_FEE_1/RT.POCNT_1::numeric) END) MONTH1,
        (CASE WHEN RT.POCNT_2=0 THEN NULL ELSE TRUNC(RT.U_FEE_2/RT.POCNT_2::numeric) END) MONTH2,
        (CASE WHEN RT.POCNT_3=0 THEN NULL ELSE TRUNC(RT.U_FEE_3/RT.POCNT_3::numeric) END) MONTH3,
        (CASE WHEN RT.POCNT_4=0 THEN NULL ELSE TRUNC(RT.U_FEE_4/RT.POCNT_4::numeric) END) MONTH4,
        (CASE WHEN RT.POCNT_5=0 THEN NULL ELSE TRUNC(RT.U_FEE_5/RT.POCNT_5::numeric) END) MONTH5,
        (CASE WHEN RT.POCNT_6=0 THEN NULL ELSE TRUNC(RT.U_FEE_6/RT.POCNT_6::numeric) END) MONTH6,
        (CASE WHEN RT.POCNT_7=0 THEN NULL ELSE TRUNC(RT.U_FEE_7/RT.POCNT_7::numeric) END) MONTH7,
        (CASE WHEN RT.POCNT_8=0 THEN NULL ELSE TRUNC(RT.U_FEE_8/RT.POCNT_8::numeric) END) MONTH8,
        (CASE WHEN RT.POCNT_9=0 THEN NULL ELSE TRUNC(RT.U_FEE_9/RT.POCNT_9::numeric) END) MONTH9,
        (CASE WHEN RT.POCNT_10=0 THEN NULL ELSE TRUNC(RT.U_FEE_10/RT.POCNT_10::numeric) END) MONTH10,
        (CASE WHEN RT.POCNT_11=0 THEN NULL ELSE TRUNC(RT.U_FEE_11/RT.POCNT_11::numeric) END) MONTH11,
        (CASE WHEN RT.POCNT_12=0 THEN NULL ELSE TRUNC(RT.U_FEE_12/RT.POCNT_12::numeric) END) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;=#{paramVO.startDt}::integer AND MONTH_ID &lt;=#{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <select id="getUnitPriceNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.ID,
        T.IS_FP,
        T.QUANTITY,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo} WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;=#{paramVO.startDt}::integer
        AND DT.MONTH &lt;=#{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        g3 as(
        SELECT BUY_MONTH,
        USER_ID,
        SUM(REAL_FEE) SUM_FEE,
        SUM(QUANTITY) POCNT
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        ),
        g4 as(
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,COUNT(*) C_USERS,SUM(SUM_FEE) C_FEE,SUM(POCNT) C_POCNT  FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH)
        SELECT
        MIN_MONTH,
        BUY_MONTH,
        (CASE WHEN C_POCNT=0 THEN 0 ELSE TRUNC(C_FEE/C_POCNT) END) UPRICE,
        C_USERS
        from g4
    </select>

    <select id="getUnitPriceDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP,
        T.QUANTITY,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        SELECT
        SUM(QUANTITY) POCNT, --订单数
        COUNT(DISTINCT G1.USER_ID) USERCNT,
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF,
        SUM(G1.REAL_FEE) U_FEE
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        GROUP BY
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM')))
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN USERCNT ELSE 0 END) USERCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN POCNT ELSE 0 END) POCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN U_FEE ELSE 0 END) U_FEE,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN POCNT ELSE 0 END) POCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN U_FEE ELSE 0 END) U_FEE_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN POCNT ELSE 0 END) POCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN U_FEE ELSE 0 END) U_FEE_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN POCNT ELSE 0 END) POCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN U_FEE ELSE 0 END) U_FEE_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN POCNT ELSE 0 END) POCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN U_FEE ELSE 0 END) U_FEE_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN POCNT ELSE 0 END) POCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN U_FEE ELSE 0 END) U_FEE_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN POCNT ELSE 0 END) POCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN U_FEE ELSE 0 END) U_FEE_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN POCNT ELSE 0 END) POCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN U_FEE ELSE 0 END) U_FEE_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN POCNT ELSE 0 END) POCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN U_FEE ELSE 0 END) U_FEE_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN POCNT ELSE 0 END) POCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN U_FEE ELSE 0 END) U_FEE_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN POCNT ELSE 0 END) POCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN U_FEE ELSE 0 END) U_FEE_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN POCNT ELSE 0 END) POCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN U_FEE ELSE 0 END) U_FEE_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN POCNT ELSE 0 END) POCNT_12,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN U_FEE ELSE 0 END) U_FEE_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        RT.USERCNT TOTAL_USER,  --用户数
        (CASE WHEN RT.POCNT=0 THEN NULL ELSE TRUNC(RT.U_FEE/RT.POCNT::numeric) END) CURRENT_MONTH, --订单价
        (CASE WHEN RT.POCNT_1=0 THEN NULL ELSE TRUNC(RT.U_FEE_1/RT.POCNT_1::numeric) END) MONTH1,
        (CASE WHEN RT.POCNT_2=0 THEN NULL ELSE TRUNC(RT.U_FEE_2/RT.POCNT_2::numeric) END) MONTH2,
        (CASE WHEN RT.POCNT_3=0 THEN NULL ELSE TRUNC(RT.U_FEE_3/RT.POCNT_3::numeric) END) MONTH3,
        (CASE WHEN RT.POCNT_4=0 THEN NULL ELSE TRUNC(RT.U_FEE_4/RT.POCNT_4::numeric) END) MONTH4,
        (CASE WHEN RT.POCNT_5=0 THEN NULL ELSE TRUNC(RT.U_FEE_5/RT.POCNT_5::numeric) END) MONTH5,
        (CASE WHEN RT.POCNT_6=0 THEN NULL ELSE TRUNC(RT.U_FEE_6/RT.POCNT_6::numeric) END) MONTH6,
        (CASE WHEN RT.POCNT_7=0 THEN NULL ELSE TRUNC(RT.U_FEE_7/RT.POCNT_7::numeric) END) MONTH7,
        (CASE WHEN RT.POCNT_8=0 THEN NULL ELSE TRUNC(RT.U_FEE_8/RT.POCNT_8::numeric) END) MONTH8,
        (CASE WHEN RT.POCNT_9=0 THEN NULL ELSE TRUNC(RT.U_FEE_9/RT.POCNT_9::numeric) END) MONTH9,
        (CASE WHEN RT.POCNT_10=0 THEN NULL ELSE TRUNC(RT.U_FEE_10/RT.POCNT_10::numeric) END) MONTH10,
        (CASE WHEN RT.POCNT_11=0 THEN NULL ELSE TRUNC(RT.U_FEE_11/RT.POCNT_11::numeric) END) MONTH11,
        (CASE WHEN RT.POCNT_12=0 THEN NULL ELSE TRUNC(RT.U_FEE_12/RT.POCNT_12::numeric) END) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;=#{paramVO.startDt}::integer AND MONTH_ID &lt;=#{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <!--连带率 - 间隔月-->
    <select id="getJoinRateDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP,
        T.QUANTITY,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        SELECT
        COUNT(*) POCNT, --订单数
        COUNT(DISTINCT G1.USER_ID) USERCNT,
        SUM(QUANTITY) SPCNT, --商品数
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF,
        SUM(G1.REAL_FEE) U_FEE
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        GROUP BY
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM')))
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN USERCNT ELSE 0 END) USERCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN POCNT ELSE 0 END) POCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN SPCNT ELSE 0 END) SPCNT,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN POCNT ELSE 0 END) POCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN SPCNT ELSE 0 END) SPCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN POCNT ELSE 0 END) POCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN SPCNT ELSE 0 END) SPCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN POCNT ELSE 0 END) POCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN SPCNT ELSE 0 END) SPCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN POCNT ELSE 0 END) POCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN SPCNT ELSE 0 END) SPCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN POCNT ELSE 0 END) POCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN SPCNT ELSE 0 END) SPCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN POCNT ELSE 0 END) POCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN SPCNT ELSE 0 END) SPCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN POCNT ELSE 0 END) POCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN SPCNT ELSE 0 END) SPCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN POCNT ELSE 0 END) POCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN SPCNT ELSE 0 END) SPCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN POCNT ELSE 0 END) POCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN SPCNT ELSE 0 END) SPCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN POCNT ELSE 0 END) POCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN SPCNT ELSE 0 END) SPCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN POCNT ELSE 0 END) POCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN SPCNT ELSE 0 END) SPCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN POCNT ELSE 0 END) POCNT_12,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN SPCNT ELSE 0 END) SPCNT_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        RT.USERCNT TOTAL_USER,  --用户数
        (CASE WHEN RT.POCNT=0 THEN NULL ELSE TRUNC(RT.SPCNT/RT.POCNT::numeric, 2) END) CURRENT_MONTH, --订单价
        (CASE WHEN RT.POCNT_1=0 THEN NULL ELSE TRUNC(RT.SPCNT_1/RT.POCNT_1::numeric, 2) END) MONTH1,
        (CASE WHEN RT.POCNT_2=0 THEN NULL ELSE TRUNC(RT.SPCNT_2/RT.POCNT_2::numeric, 2) END) MONTH2,
        (CASE WHEN RT.POCNT_3=0 THEN NULL ELSE TRUNC(RT.SPCNT_3/RT.POCNT_3::numeric, 2) END) MONTH3,
        (CASE WHEN RT.POCNT_4=0 THEN NULL ELSE TRUNC(RT.SPCNT_4/RT.POCNT_4::numeric, 2) END) MONTH4,
        (CASE WHEN RT.POCNT_5=0 THEN NULL ELSE TRUNC(RT.SPCNT_5/RT.POCNT_5::numeric, 2) END) MONTH5,
        (CASE WHEN RT.POCNT_6=0 THEN NULL ELSE TRUNC(RT.SPCNT_6/RT.POCNT_6::numeric, 2) END) MONTH6,
        (CASE WHEN RT.POCNT_7=0 THEN NULL ELSE TRUNC(RT.SPCNT_7/RT.POCNT_7::numeric, 2) END) MONTH7,
        (CASE WHEN RT.POCNT_8=0 THEN NULL ELSE TRUNC(RT.SPCNT_8/RT.POCNT_8::numeric, 2) END) MONTH8,
        (CASE WHEN RT.POCNT_9=0 THEN NULL ELSE TRUNC(RT.SPCNT_9/RT.POCNT_9::numeric, 2) END) MONTH9,
        (CASE WHEN RT.POCNT_10=0 THEN NULL ELSE TRUNC(RT.SPCNT_10/RT.POCNT_10::numeric, 2) END) MONTH10,
        (CASE WHEN RT.POCNT_11=0 THEN NULL ELSE TRUNC(RT.SPCNT_11/RT.POCNT_11::numeric, 2) END) MONTH11,
        (CASE WHEN RT.POCNT_12=0 THEN NULL ELSE TRUNC(RT.SPCNT_12/RT.POCNT_12::numeric, 2) END) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;=#{paramVO.startDt}::integer AND MONTH_ID &lt;=#{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <!--购买频率 间隔月-->
    <select id="getPurchFreqDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        SELECT
        COUNT(*) POCNT, --订单数
        COUNT(DISTINCT G1.USER_ID) USERCNT,
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF,
        SUM(G1.REAL_FEE) U_FEE
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        GROUP BY
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM')))
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN USERCNT ELSE 0 END) USERCNT,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN POCNT ELSE 0 END) POCNT,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN POCNT ELSE 0 END) POCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN USERCNT ELSE 0 END) USERCNT_1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN POCNT ELSE 0 END) POCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN USERCNT ELSE 0 END) USERCNT_2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN POCNT ELSE 0 END) POCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN USERCNT ELSE 0 END) USERCNT_3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN POCNT ELSE 0 END) POCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN USERCNT ELSE 0 END) USERCNT_4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN POCNT ELSE 0 END) POCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN USERCNT ELSE 0 END) USERCNT_5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN POCNT ELSE 0 END) POCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN USERCNT ELSE 0 END) USERCNT_6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN POCNT ELSE 0 END) POCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN USERCNT ELSE 0 END) USERCNT_7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN POCNT ELSE 0 END) POCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN USERCNT ELSE 0 END) USERCNT_8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN POCNT ELSE 0 END) POCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN USERCNT ELSE 0 END) USERCNT_9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN POCNT ELSE 0 END) POCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN USERCNT ELSE 0 END) USERCNT_10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN POCNT ELSE 0 END) POCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN USERCNT ELSE 0 END) USERCNT_11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN POCNT ELSE 0 END) POCNT_12,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN USERCNT ELSE 0 END) USERCNT_12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        RT.USERCNT TOTAL_USER,  --用户数
        (CASE WHEN RT.USERCNT=0 THEN NULL ELSE TRUNC(RT.POCNT/RT.USERCNT::numeric, 2) END) CURRENT_MONTH, --购买频次
        (CASE WHEN RT.USERCNT_1=0 THEN NULL ELSE TRUNC(RT.POCNT_1/RT.USERCNT_1::numeric, 2) END) MONTH1,
        (CASE WHEN RT.USERCNT_2=0 THEN NULL ELSE TRUNC(RT.POCNT_2/RT.USERCNT_2::numeric, 2) END) MONTH2,
        (CASE WHEN RT.USERCNT_3=0 THEN NULL ELSE TRUNC(RT.POCNT_3/RT.USERCNT_3::numeric, 2) END) MONTH3,
        (CASE WHEN RT.USERCNT_4=0 THEN NULL ELSE TRUNC(RT.POCNT_4/RT.USERCNT_4::numeric, 2) END) MONTH4,
        (CASE WHEN RT.USERCNT_5=0 THEN NULL ELSE TRUNC(RT.POCNT_5/RT.USERCNT_5::numeric, 2) END) MONTH5,
        (CASE WHEN RT.USERCNT_6=0 THEN NULL ELSE TRUNC(RT.POCNT_6/RT.USERCNT_6::numeric, 2) END) MONTH6,
        (CASE WHEN RT.USERCNT_7=0 THEN NULL ELSE TRUNC(RT.POCNT_7/RT.USERCNT_7::numeric, 2) END) MONTH7,
        (CASE WHEN RT.USERCNT_8=0 THEN NULL ELSE TRUNC(RT.POCNT_8/RT.USERCNT_8::numeric, 2) END) MONTH8,
        (CASE WHEN RT.USERCNT_9=0 THEN NULL ELSE TRUNC(RT.POCNT_9/RT.USERCNT_9::numeric, 2) END) MONTH9,
        (CASE WHEN RT.USERCNT_10=0 THEN NULL ELSE TRUNC(RT.POCNT_10/RT.USERCNT_10::numeric, 2) END) MONTH10,
        (CASE WHEN RT.USERCNT_11=0 THEN NULL ELSE TRUNC(RT.POCNT_11/RT.USERCNT_11::numeric, 2) END) MONTH11,
        (CASE WHEN RT.USERCNT_12=0 THEN NULL ELSE TRUNC(RT.POCNT_12/RT.USERCNT_12::numeric, 2) END) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;=#{paramVO.startDt}::integer AND MONTH_ID &lt;=#{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>

    <!--购买频率 - 自然月-->
    <select id="getPurchFreqNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.ID,
        T.IS_FP,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo} WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;=#{paramVO.startDt}::integer
        AND DT.MONTH &lt;=#{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        g3 as(
        SELECT BUY_MONTH,
        COUNT(DISTINCT g1.USER_ID) USERCNT,
        COUNT(*) POCNT,
        USER_ID
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        ),
        g4 as(
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,SUM(POCNT) S_POCNT,SUM(USERCNT) S_USERCNT,COUNT(*) C_USERS FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH)
        SELECT
        MIN_MONTH,
        BUY_MONTH,
        (CASE WHEN S_USERCNT=0 THEN 0 ELSE TRUNC(S_POCNT/S_USERCNT, 2) END) UPRICE,
        C_USERS
        from g4
    </select>

    <!--连带率 - 自然月-->
    <select id="getJoinRateNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.ID,
        T.IS_FP,
        T.QUANTITY,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo} WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;=#{paramVO.startDt}::integer
        AND DT.MONTH &lt;=#{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        g3 as(
        SELECT BUY_MONTH,
        USER_ID,
        SUM(QUANTITY) SUM_FEE,
        COUNT(ID) POCNT
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        ),
        g4 as(
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,COUNT(*) C_USERS,SUM(SUM_FEE) C_FEE,SUM(POCNT) C_POCNT  FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH)
        SELECT
        MIN_MONTH,
        BUY_MONTH,
        (CASE WHEN C_POCNT=0 THEN 0 ELSE TRUNC(C_FEE/C_POCNT, 2) END) UPRICE,
        C_USERS
        from g4
    </select>

    <!-- 按自然月查看订单价 -->
    <select id="getPriceNMonth" resultMap="datePeriodKpiMap">
        WITH g1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.ID,
        T.IS_FP,
        ${templateResult.fieldInfo}
        FROM ${templateResult.fromInfo} WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;=#{paramVO.startDt}::integer
        AND DT.MONTH &lt;=#{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        g2 as(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        g3 as(
        SELECT BUY_MONTH,
        USER_ID,
        SUM(REAL_FEE) SUM_FEE,
        COUNT(ID) POCNT
        FROM g1
        GROUP BY BUY_MONTH,USER_ID
        ),
        g4 as(
        SELECT g2.MIN_MONTH,g3.BUY_MONTH,COUNT(*) C_USERS,SUM(SUM_FEE) C_FEE,SUM(POCNT) C_POCNT  FROM  g2,g3
        WHERE g2.USER_ID = g3.USER_ID
        GROUP BY g2.MIN_MONTH,g3.BUY_MONTH
        ORDER BY g2.MIN_MONTH,g3.BUY_MONTH)
        SELECT
        MIN_MONTH,
        BUY_MONTH,
        (CASE WHEN C_POCNT=0 THEN 0 ELSE TRUNC(C_FEE/C_POCNT) END) UPRICE,
        C_USERS
        from g4
    </select>

    <!-- 按自然月查看流失用户数 -->
    <select id="getLossUserNMonth" resultMap="datePeriodKpiMap">
        WITH G1 AS
        (
        SELECT MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo} WHERE T.VALID_STATUS=1
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        AND T.ORDER_DT_WID=DT.ROW_WID
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        --每个用户 及其购买月份
        G3 AS(
        SELECT BUY_MONTH,
        USER_ID
        FROM G1
        GROUP BY BUY_MONTH,USER_ID
        ),
        G4 AS(
        SELECT MIN_MONTH,COUNT(USER_ID) BEGIN_USERS FROM G2 GROUP BY MIN_MONTH
        ),
        G5 AS(
        SELECT
        G2.MIN_MONTH,
        G3.BUY_MONTH,
        COUNT(*) RETAIN_USERS
        FROM  G2,G3
        WHERE G2.USER_ID = G3.USER_ID
        GROUP BY G2.MIN_MONTH,G3.BUY_MONTH)
        SELECT
            G5.MIN_MONTH,
            G5.BUY_MONTH,
            (CASE WHEN G5.MIN_MONTH=G5.BUY_MONTH THEN G4.BEGIN_USERS ELSE (G4.BEGIN_USERS-RETAIN_USERS) END) C_USERS
        FROM G5,G4 WHERE G5.MIN_MONTH=G4.MIN_MONTH
        ORDER BY G5.MIN_MONTH,G5.BUY_MONTH

    </select>

    <!-- 按间隔月查看流失用户数 -->
    <select id="getLossUserDMonth" resultType="map">
        WITH G1 AS
        (
        SELECT
        DT.MONTH BUY_MONTH,
        T.USER_ID,
        T.IS_FP
        FROM ${templateResult.fromInfo}
        WHERE T.VALID_STATUS=1
        AND T.ORDER_DT_WID=DT.ROW_WID
        AND DT.MONTH &gt;= #{paramVO.startDt}::integer
        AND DT.MONTH &lt;= #{paramVO.endDt}::integer
        ${templateResult.filterInfo}
        ),
        G2 AS(  --每月新增的用户
        SELECT G1.USER_ID,G1.BUY_MONTH MIN_MONTH FROM G1 WHERE G1.IS_FP='Y' GROUP BY G1.USER_ID,G1.BUY_MONTH
        ),
        G3 AS(
        --如果用户一个月有多单，则只计算一次
        SELECT
        DISTINCT
        G1.USER_ID,
        G1.BUY_MONTH,
        G2.MIN_MONTH,
        extract(month from age(TO_DATE(G1.BUY_MONTH::varchar,'YYYYMM'), TO_DATE(G2.MIN_MONTH::varchar,'YYYYMM'))) MONTH_DIFF
        FROM G1,G2 WHERE G1.USER_ID=G2.USER_ID
        ),
        RT AS(
        SELECT
        MIN_MONTH MONTH_ID,
        SUM(CASE WHEN MONTH_DIFF = 0 THEN 1 ELSE 0 END) MONTH0,
        SUM(CASE WHEN MONTH_DIFF = 1 THEN 1 ELSE 0 END) MONTH1,
        SUM(CASE WHEN MONTH_DIFF = 2 THEN 1 ELSE 0 END) MONTH2,
        SUM(CASE WHEN MONTH_DIFF = 3 THEN 1 ELSE 0 END) MONTH3,
        SUM(CASE WHEN MONTH_DIFF = 4 THEN 1 ELSE 0 END) MONTH4,
        SUM(CASE WHEN MONTH_DIFF = 5 THEN 1 ELSE 0 END) MONTH5,
        SUM(CASE WHEN MONTH_DIFF = 6 THEN 1 ELSE 0 END) MONTH6,
        SUM(CASE WHEN MONTH_DIFF = 7 THEN 1 ELSE 0 END) MONTH7,
        SUM(CASE WHEN MONTH_DIFF = 8 THEN 1 ELSE 0 END) MONTH8,
        SUM(CASE WHEN MONTH_DIFF = 9 THEN 1 ELSE 0 END) MONTH9,
        SUM(CASE WHEN MONTH_DIFF = 10 THEN 1 ELSE 0 END) MONTH10,
        SUM(CASE WHEN MONTH_DIFF = 11 THEN 1 ELSE 0 END) MONTH11,
        SUM(CASE WHEN MONTH_DIFF = 12 THEN 1 ELSE 0 END) MONTH12
        FROM G3 GROUP  BY MIN_MONTH
        )
        SELECT
        DT.MONTH_ID,
        coalesce(RT.MONTH0,0) TOTAL_USER,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH1,0) MONTH1,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH2,0) MONTH2,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH3,0) MONTH3,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH4,0) MONTH4,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH5,0) MONTH5,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH6,0) MONTH6,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH7,0) MONTH7,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH8,0) MONTH8,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH9,0) MONTH9,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH10,0) MONTH10,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH11,0) MONTH11,
        coalesce(RT.MONTH0,0) - coalesce(RT.MONTH12,0) MONTH12
        FROM RT RIGHT JOIN
        (SELECT MONTH_ID FROM W_MONTH  WHERE MONTH_ID &gt;= #{paramVO.startDt}::integer AND MONTH_ID &lt;= #{paramVO.endDt}::integer) DT
        ON RT.MONTH_ID=DT.MONTH_ID
        ORDER BY DT.MONTH_ID
    </select>
</mapper>
