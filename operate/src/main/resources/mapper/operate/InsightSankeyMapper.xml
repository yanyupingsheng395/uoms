<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.InsightSankeyMapper">

    <select id="getLinkInfo" resultType="map">
        select source_name,target_name, user_cnt, S_RN, SOURCE_SPU_ID from UO_INSIGHT_SANKEY t where s_rn &lt;=7 and DATE_RANGE = #{dateRange} and data_type = 'C'   ORDER BY S_RN ASC,SOURCE_SPU_ID ASC
    </select>

    <select id="getNodeInfo" resultType="map">
        SELECT v1.T_RN, v1.TARGET_SPU_ID, v1.TARGET_NAME, v2.B_USER_CNT, v2.C_USER_CNT, trunc(B_RATE, 2) B_RATE, trunc(C_RATE, 2) C_RATE
        FROM (
        SELECT DISTINCT TARGET_NAME, T_RN, TARGET_SPU_ID
        FROM UO_INSIGHT_SANKEY T
        WHERE S_RN &lt;= 7
        AND DATA_TYPE = 'C'
        AND DATE_RANGE = #{dateRange}
        ) v1,
        (
        SELECT v1.T_RN,
        TARGET_SPU_ID,
        v1.B_USER_CNT,
        v1.C_USER_CNT,
        (CASE WHEN v2.B_USER_CNT = 0 THEN 1 ELSE v1.B_USER_CNT / v2.B_USER_CNT END) * 100 B_RATE,
        (CASE WHEN v2.C_USER_CNT = 0 THEN 1 ELSE v1.C_USER_CNT / v2.C_USER_CNT END) * 100 C_RATE
        FROM (
        -- 当前次序下SPU，当前SPU的人数
        SELECT T_RN,
        TARGET_SPU_ID,
        SUM(CASE WHEN DATA_TYPE = 'B' THEN USER_CNT ELSE 0 END) B_USER_CNT,
        SUM(CASE WHEN DATA_TYPE = 'C' THEN USER_CNT ELSE 0 END) C_USER_CNT
        FROM UO_INSIGHT_SANKEY
        WHERE DATE_RANGE = #{dateRange}
        GROUP BY T_RN, TARGET_SPU_ID order by t_rn asc
        ) v1,
        (
        -- 当前次序下总人数
        SELECT T_RN,
        SUM(CASE WHEN DATA_TYPE = 'B' THEN USER_CNT ELSE 0 END) B_USER_CNT,
        SUM(CASE WHEN DATA_TYPE = 'C' THEN USER_CNT ELSE 0 END) C_USER_CNT
        FROM UO_INSIGHT_SANKEY
        WHERE DATE_RANGE = #{dateRange}
        GROUP BY T_RN
        ) v2
        WHERE v1.T_RN = v2.T_RN
        ORDER BY v1.T_RN, TARGET_SPU_ID
        ) v2
        WHERE v1.T_RN = v2.T_RN
        AND v1.TARGET_SPU_ID = v2.TARGET_SPU_ID

        union

        (
        SELECT v1.S_RN, v1.SOURCE_SPU_ID, v1.SOURCE_NAME, v2.B_USER_CNT, v2.C_USER_CNT, trunc(B_RATE, 2) B_RATE, trunc(C_RATE, 2) C_RATE
        FROM (
        SELECT DISTINCT SOURCE_NAME, S_RN, SOURCE_SPU_ID
        FROM UO_INSIGHT_SANKEY T
        WHERE S_RN = 1
        AND DATA_TYPE = 'C'
        AND DATE_RANGE = #{dateRange}
        ) v1,
        (
        SELECT v1.S_RN,
        SOURCE_SPU_ID,
        v1.B_USER_CNT,
        v1.C_USER_CNT,
        (CASE WHEN v2.B_USER_CNT = 0 THEN 1 ELSE v1.B_USER_CNT / v2.B_USER_CNT END) * 100 B_RATE,
        (CASE WHEN v2.C_USER_CNT = 0 THEN 1 ELSE v1.C_USER_CNT / v2.C_USER_CNT END) * 100 C_RATE
        FROM (
        -- 当前次序下SPU，当前SPU的人数
        SELECT S_RN,
        SOURCE_SPU_ID,
        SUM(CASE WHEN DATA_TYPE = 'B' THEN USER_CNT ELSE 0 END) B_USER_CNT,
        SUM(CASE WHEN DATA_TYPE = 'C' THEN USER_CNT ELSE 0 END) C_USER_CNT
        FROM UO_INSIGHT_SANKEY
        WHERE DATE_RANGE = #{dateRange}
        GROUP BY S_RN, SOURCE_SPU_ID
        ) v1,
        (
        -- 当前次序下总人数
        SELECT S_RN,
        SUM(CASE WHEN DATA_TYPE = 'B' THEN USER_CNT ELSE 0 END) B_USER_CNT,
        SUM(CASE WHEN DATA_TYPE = 'C' THEN USER_CNT ELSE 0 END) C_USER_CNT
        FROM UO_INSIGHT_SANKEY
        WHERE DATE_RANGE = #{dateRange}
        GROUP BY S_RN
        ) v2
        WHERE v1.S_RN = v2.S_RN
        ORDER BY v1.S_RN, SOURCE_SPU_ID
        ) v2
        WHERE v1.S_RN = v2.S_RN
        AND v1.SOURCE_SPU_ID = v2.SOURCE_SPU_ID
        )
        order by T_RN ASC,TARGET_SPU_ID ASC
    </select>
</mapper>