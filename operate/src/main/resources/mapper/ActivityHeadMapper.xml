<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linksteady.operate.dao.ActivityHeadMapper">
    <resultMap id="baseResult" type="com.linksteady.operate.domain.ActivityHead">
        <result property="headId" jdbcType="DECIMAL" column="HEAD_ID"></result>
        <result property="activityName" jdbcType="VARCHAR" column="ACTIVITY_NAME"></result>
        <result property="hasPreheat" jdbcType="VARCHAR" column="HAS_PREHEAT"></result>
        <result property="preheatStatus" jdbcType="VARCHAR" column="PREHEAT_STATUS"></result>
        <result property="preheatStartDt" jdbcType="VARCHAR" column="PREHEAT_START_DT"></result>
        <result property="preheatEndDt" jdbcType="VARCHAR" column="PREHEAT_END_DT"></result>
        <result property="formalStatus" jdbcType="VARCHAR" column="FORMAL_STATUS"></result>
        <result property="formalStartDt" jdbcType="VARCHAR" column="FORMAL_START_DT"></result>
        <result property="formalEndDt" jdbcType="VARCHAR" column="FORMAL_END_DT"></result>
        <result property="activityflag" jdbcType="VARCHAR" column="ACTIVITYFLAG"></result>
        <result property="preheatNotifyDt" jdbcType="VARCHAR" column="PREHEAT_NOTIFY_DT"></result>
        <result property="formalNotifyDt" jdbcType="VARCHAR" column="FORMAL_NOTIFY_DT"></result>
    </resultMap>

    <resultMap id="templateMap" type="com.linksteady.operate.domain.ActivityTemplate">
        <result property="code" jdbcType="VARCHAR" column="TMP_CODE"></result>
        <result property="name" jdbcType="VARCHAR" column="TMP_NAME"></result>
        <result property="content" jdbcType="VARCHAR" column="TMP_CONTENT"></result>
        <result property="remark" jdbcType="VARCHAR" column="REMARK"></result>
        <result property="isPersonal" jdbcType="VARCHAR" column="IS_PERSONAL"></result>
    </resultMap>

    <select id="getDataListOfPage" resultMap="baseResult">
        select * from (
          select t.*, ROWNUM rn from (
            select HEAD_ID, ACTIVITY_NAME, HAS_PREHEAT, PREHEAT_STATUS, to_char(PREHEAT_START_DT, 'yyyymmdd') PREHEAT_START_DT, to_char(PREHEAT_END_DT, 'yyyymmdd') PREHEAT_END_DT, FORMAL_STATUS, to_char(FORMAL_START_DT, 'yyyymmdd') FORMAL_START_DT, to_char(FORMAL_END_DT, 'yyyymmdd') FORMAL_END_DT
            from UO_OP_ACTIVITY_HEADER where 1=1
            <if test="name != '' and name != null">
                and ACTIVITY_NAME = #{name}
            </if>
        <if test="date != '' and date != null">
            and ((trunc(PREHEAT_START_DT, 'dd') &lt;= to_date(#{date}, 'yyyy-mm-dd') and trunc(PREHEAT_END_DT, 'dd') &gt;= to_date(#{date}, 'yyyy-mm-dd'))
             or (trunc(FORMAL_START_DT, 'dd') &lt;= to_date(#{date}, 'yyyy-mm-dd') and trunc(FORMAL_END_DT, 'dd') &gt;= to_date(#{date}, 'yyyy-mm-dd')))
        </if>
        <if test="status != '' and status != null">
            and (PREHEAT_STATUS = #{status} or FORMAL_STATUS = #{status})
        </if>
            order by HEAD_ID desc
          ) t where ROWNUM &lt;=#{end}
        ) where RN &gt;= #{start}
    </select>

    <select id="getDataCount" resultType="int">
        select count(1) from UO_OP_ACTIVITY_HEADER where 1=1
        <if test="name != '' and name != null">
            and ACTIVITY_NAME = #{name}
        </if>
    </select>

    <select id="findById" resultMap="baseResult">
        select
           HEAD_ID,
           ACTIVITY_NAME,
           HAS_PREHEAT,
           PREHEAT_STATUS,
           to_char(PREHEAT_START_DT, 'yyyy-mm-dd') PREHEAT_START_DT,
           to_char(PREHEAT_END_DT, 'yyyy-mm-dd') PREHEAT_END_DT,
           FORMAL_STATUS,
           to_char(FORMAL_START_DT, 'yyyy-mm-dd') FORMAL_START_DT,
           to_char(FORMAL_END_DT, 'yyyy-mm-dd') FORMAL_END_DT,
           ACTIVITYFLAG,
           to_char(PREHEAT_NOTIFY_DT, 'yyyy-mm-dd') PREHEAT_NOTIFY_DT,
           to_char(FORMAL_NOTIFY_DT, 'yyyy-mm-dd') FORMAL_NOTIFY_DT
        from UO_OP_ACTIVITY_HEADER
        where HEAD_ID = #{headId}
    </select>

    <insert id="saveActivityHead">
        <selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="headId">
            select seq_activity_head_id.nextval from dual
        </selectKey>
        insert into UO_OP_ACTIVITY_HEADER(
            HEAD_ID,
            ACTIVITY_NAME,
            HAS_PREHEAT,
            PREHEAT_STATUS,
            PREHEAT_START_DT,
            PREHEAT_END_DT,
            FORMAL_STATUS,
            FORMAL_START_DT,
            FORMAL_END_DT,
            INSERT_DT,
            INSERT_BY,
            PREHEAT_NOTIFY_DT,
            FORMAL_NOTIFY_DT,
            ACTIVITYFLAG)
        values (#{headId},#{activityName}, #{hasPreheat}, #{preheatStatus}, to_date(#{preheatStartDt}, 'yyyy-mm-dd'), to_date(#{preheatEndDt}, 'yyyy-mm-dd'), #{formalStatus}, to_date(#{formalStartDt}, 'yyyy-mm-dd'), to_date(#{formalEndDt}, 'yyyy-mm-dd'),
        #{insertDt}, #{insertBy}, to_date(#{preheatNotifyDt}, 'yyyy-mm-dd'), to_date(#{formalNotifyDt}, 'yyyy-mm-dd'), #{activityflag})
    </insert>

    <update id="updateActiveHead">
        update UO_OP_ACTIVITY_HEADER set
        ACTIVITY_NAME = #{activityName},
        HAS_PREHEAT = #{hasPreheat},
        PREHEAT_STATUS = #{preheatStatus},
        PREHEAT_START_DT = to_date(#{preheatStartDt}, 'yyyy-mm-dd'),
        PREHEAT_END_DT = to_date(#{preheatEndDt}, 'yyyy-mm-dd'),
        FORMAL_STATUS = #{formalStatus},
        FORMAL_START_DT = to_date(#{formalStartDt}, 'yyyy-mm-dd'),
        FORMAL_END_DT = to_date(#{formalEndDt}, 'yyyy-mm-dd')
        where HEAD_ID = #{headId}
    </update>


    <select id="getTemplateTableData" resultMap="templateMap">
        select * from (
        with v1 as (select TMP_CODE, listagg(ACTIVITY_TYPE, ',') within group ( order by SMS_TEMPLATE_CODE ) SCENE
        from (
        select TMP_CODE, t2.ACTIVITY_TYPE, t2.SMS_TEMPLATE_CODE
        from UO_OP_ACTIVITY_TEMPLATE t1,
        UO_OP_ACTIVITY_GROUP t2
        where t1.TMP_CODE = t2.SMS_TEMPLATE_CODE(+)
        group by TMP_CODE, ACTIVITY_TYPE, SMS_TEMPLATE_CODE
        )
        group by TMP_CODE),
        v2 as (
        select TMP_CODE, listagg(GROUP_ID, ',') within group ( order by SMS_TEMPLATE_CODE asc) relation
        from (
        select TMP_CODE, t2.GROUP_ID, t2.SMS_TEMPLATE_CODE
        from UO_OP_ACTIVITY_TEMPLATE t1,
        UO_OP_ACTIVITY_GROUP t2
        where t1.TMP_CODE = t2.SMS_TEMPLATE_CODE(+)
        group by TMP_CODE, GROUP_ID, SMS_TEMPLATE_CODE
        )
        group by TMP_CODE
        )
        select t.TMP_CODE, t.TMP_NAME, t.TMP_CONTENT, t.IS_PERSONAL, v1.SCENE,
        case when v2.relation in ('1', '1,2', '2') then 'GROWTH' when v2.relation = '3' then 'LATENT'
        when v2.relation in ('1,3', '1,2,3', '2,3') then 'GROWTH,LATENT' end relation
        from UO_OP_ACTIVITY_TEMPLATE t, v1, v2
        where t.TMP_CODE = v1.TMP_CODE and t.TMP_CODE = v2.TMP_CODE
        order by TMP_CODE desc
        )
        where 1=1
        <if test="activityTemplate.name != null and activityTemplate.name != ''">
            and TMP_NAME like concat('%', concat(#{activityTemplate.name} ,'%'))
        </if>
        <if test="activityTemplate.isPersonal != null and activityTemplate.isPersonal != ''">
            and IS_PERSONAL = #{activityTemplate.isPersonal}
        </if>
        <if test="activityTemplate.relation != null and activityTemplate.relation != ''">
            and relation like concat('%', concat(#{activityTemplate.relation} ,'%'))
        </if>
        <if test="activityTemplate.scene != null and activityTemplate.scene != ''">
            and scene like concat('%', concat(#{activityTemplate.scene} ,'%'))
        </if>
    </select>

    <select id="getActivityName" resultType="string">
        select ACTIVITY_NAME from UO_OP_ACTIVITY_HEADER where head_id = #{headId}
    </select>

    <select id="getActivityStatus" resultType="int">
        select count(1) from UO_OP_ACTIVITY_HEADER
        where head_id = #{id} and (PREHEAT_STATUS in ('todo', 'doing') or FORMAL_STATUS in ('todo', 'doing'))
    </select>

    <update id="updateStatus">
        ${sql}
    </update>

    <select id="getPreheatStatus" resultType="string">
        select PREHEAT_STATUS from UO_OP_ACTIVITY_HEADER where head_id = #{headId}
    </select>

    <update id="updateActivityFlag">
        UPDATE UO_OP_ACTIVITY_HEADER T SET T.ACTIVITYFLAG='B' where t.head_id=#{headId} and exists (
            select head_id from (
            select head_id,trunc(case when c.has_preheat='1' then c.preheat_start_dt else c.formal_start_dt end) activity_start_dt,
            trunc(c.formal_end_dt) activity_end_dt
            from uo_op_activity_header c where head_id=#{headId} ) tc where exists (
            select big_activity_date from uo_op_activity_big_config
            where to_date(big_activity_date,'MMDD') &gt;=activity_start_dt and to_date(big_activity_date,'MMDD') &lt;=activity_end_dt
        )
        )
    </update>

    <update id="updateGroupChanged">
        update UO_OP_ACTIVITY_HEADER
        <set>
            <if test="stage == 'preheat'">
                PREHEAT_CHANGED = #{changedStatus}, PREHEAT_CHANGED_TIME = #{time}
            </if>
            <if test="stage == 'formal'">
                FORMAL_CHANGED = #{changedStatus}, FORMAL_CHANGED_TIME = #{time}
            </if>
        </set>
    </update>

    <select id="getDataChangedStatus" resultType="map">
        select
        <if test="stage == 'preheat'">
            PREHEAT_CHANGED status, PREHEAT_CHANGED_TIME systime
        </if>
        <if test="stage == 'formal'">
            FORMAL_CHANGED status, FORMAL_CHANGED_TIME systime
        </if>
        from UO_OP_ACTIVITY_HEADER where HEAD_ID = #{headId}
    </select>

    <select id="getStageDate" resultType="map">
        select FORMAL_START_DT,FORMAL_END_DT,PREHEAT_START_DT,PREHEAT_END_DT from UO_OP_ACTIVITY_HEADER where head_id = #{headId}
    </select>

    <delete id="deleteActivity">
        delete from UO_OP_ACTIVITY_HEADER where head_id = #{headId}
    </delete>

    <select id="getDeleteCount" resultType="int">
        select count(1) from UO_OP_ACTIVITY_HEADER where HEAD_ID = #{headId} and ((HAS_PREHEAT = '1' and FORMAL_STATUS = 'edit' and PREHEAT_STATUS = 'edit') or (HAS_PREHEAT = '0' and FORMAL_STATUS = 'edit'))
    </select>

    <update id="updatePreheatHeadToDoing">
        UPDATE UO_OP_ACTIVITY_HEADER H SET H.PREHEAT_STATUS='doing' where h.head_id=#{headId}
    </update>

    <update id="updateFormalHeadToDoing">
        UPDATE UO_OP_ACTIVITY_HEADER H SET H.FORMAL_STATUS='doing' where h.head_id=#{headId}
    </update>

    <select id="getStatus" resultType="string">
        ${sql}
    </select>

    <insert id="saveSmsTemplate">
        insert into UO_OP_ACTIVITY_TEMPLATE(
            TMP_CONTENT, INSERT_DT, INSERT_BY, TMP_CODE, IS_PERSONAL, TMP_NAME, IS_PROD_NAME, IS_PROD_URL, IS_PRICE
        ) values (#{content}, #{insertDt}, #{insertBy}, SEQ_UO_OP_ACTIVITY_TEMPLATE.nextval, #{isPersonal}, #{name}, #{isProdName}, #{isProdUrl}, #{isPrice})
    </insert>
</mapper>