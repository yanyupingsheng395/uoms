prompt Importing table UO_DIM_JOINRELATION_CONFIG...
set feedback off
set define off
insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'neworold', '(SELECT VALUE_CODE,VALUE_DESC  FROM UO_DIM_VALUES_CONFIG WHERE DIM_CODE=''neworold'')', 'W_ORDERS.IS_FP=NEWOLD.VALUE_CODE', 'NEWOLD', 'NEWOLD.VALUE_CODE', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'source', ' W_SOURCE', 'W_ORDERS.SOURCE_ID=W_SOURCE.SOURCE_ID', 'W_SOURCE', 'W_SOURCE.SOURCE_ID', 'NUMBER');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'area', 'W_USERS', 'W_ORDERS.USER_ID=USERS.ID', 'USERS', 'USERS.AREA', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'value', 'W_USERS', 'W_ORDERS.USER_ID=USERS.ID', 'USERS', 'USERS.VALUE_STATUS', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'activity', 'W_USERS', 'W_ORDERS.USER_ID=USERS.ID', 'USERS', 'USERS.ACTIVE_LEVEL', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'gender', 'W_USERS', 'W_ORDERS.USER_ID=USERS.ID', 'USERS', 'USERS.GENDER', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDERS', 'age', 'W_USERS', 'W_ORDERS.USER_ID=USERS.ID', 'USERS', 'USERS.AGE_LEVEL', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'brand', 'W_BRAND', 'W_ORDER_DETAILS.BRAND_ID=BRAND.BRAND_ID', 'BRAND', 'BRAND.BRAND_ID', 'NUMBER');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'spu', '(SELECT W_PRODUCT_SPU.SPU_WID,W_PRODUCT_SPU.SPU_NAME,W_PRODUCT.PRODUCT_ID,W_PRODUCT.PRODUCT_NAME FROM W_PRODUCT_SPU JOIN W_PRODUCT ON W_PRODUCT_SPU.SPU_WID=W_PRODUCT.SPU_WID)', 'W_ORDER_DETAILS.PRODUCT_ID=SPU.PRODUCT_ID', 'SPU', 'SPU.SPU_WID', 'NUMBER');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'cate', '(SELECT  W_PRODUCT_CATE.CATE_WID,W_PRODUCT.PRODUCT_ID FROM W_PRODUCT_CATE JOIN W_PRODUCT ON W_PRODUCT_CATE.CATE_WID=W_PRODUCT.CATE_WID)', 'W_ORDER_DETAILS.PRODUCT_ID=CATE.PRODUCT_ID', 'CATE', 'CATE.CATE_WID', 'NUMBER');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'neworold', '(SELECT VALUE_CODE,VALUE_DESC  FROM UO_DIM_VALUES_CONFIG WHERE DIM_CODE=''neworold'')', 'W_ORDER_DETAILS.IS_FP=NEWOLD.VALUE_CODE', 'NEWOLD', 'NEWOLD.VALUE_CODE', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'source', ' W_SOURCE', 'W_ORDER_DETAILS.SOURCE_ID=W_SOURCE.SOURCE_ID', 'W_SOURCE', 'W_SOURCE.SOURCE_ID', 'NUMBER');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'area', 'W_USERS', 'W_ORDER_DETAILS.USER_ID=USERS.ID', 'USERS', 'USERS.AREA', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'value', 'W_USERS', 'W_ORDER_DETAILS.USER_ID=USERS.ID', 'USERS', 'USERS.VALUE_STATUS', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'activity', 'W_USERS', 'W_ORDER_DETAILS.USER_ID=USERS.ID', 'USERS', 'USERS.ACTIVE_LEVEL', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'gender', 'W_USERS', 'W_ORDER_DETAILS.USER_ID=USERS.ID', 'USERS', 'USERS.GENDER', 'STRING');

insert into UO_DIM_JOINRELATION_CONFIG (DIRVER_TABLE_NAME, DIM_CODE, DIM_TABLE, RELATION, DIM_TABLE_ALIAS, DIM_WHERE, DIM_WHERE_TYPE)
values ('W_ORDER_DETAILS', 'age', 'W_USERS', 'W_ORDER_DETAILS.USER_ID=USERS.ID', 'USERS', 'USERS.AGE_LEVEL', 'STRING');

prompt Done.




prompt Importing table UO_DIM_LIST_CONFIG...
set feedback off
set define off
insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('neworold', '首购/非首购', 'L', null, 'Y', 'Y', 'Y', '1', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('source', '渠道', 'S', 'SELECT SOURCE_ID VALUE_CODE,SOURCE_NAME VALUE_DESC  FROM W_SOURCE', 'Y', 'Y', 'Y', '2', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('brand', '子品牌', 'S', 'SELECT BRAND_ID VALUE_CODE,BRAND_NAME VALUE_DESC  FROM W_BRAND', 'Y', 'Y', 'Y', '3', 'Y');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('spu', 'SPU', 'S', 'SELECT  SPU_WID VALUE_CODE,SPU_NAME VALUE_DESC  FROM W_PRODUCT_SPU', 'Y', 'N', 'Y', '4', 'Y');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('area', '经济地域', 'L', null, 'Y', 'N', 'Y', '5', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('value', '价值分级', 'L', null, 'Y', 'N', 'Y', '6', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('activity', '活动分级', 'L', null, 'Y', 'N', 'Y', '7', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('gender', '性别', 'L', null, 'Y', 'N', 'Y', '8', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('age', '年龄等级', 'L', null, 'Y', 'N', 'Y', '9', 'N');

insert into UO_DIM_LIST_CONFIG (DIM_CODE, DIM_NAME, VALUE_TYPE, VALUE_SQL, IS_ALL, REASON_FLAG, DIAG_FLAG, ORDER_NO, RELY_ORDERDETAIL)
values ('cate', '品类', 'S', 'SELECT  CATE_WID VALUE_CODE,CATE_TYPE3 VALUE_DESC  FROM W_PRODUCT_CATE', 'Y', 'N', 'Y', '10', 'Y');

prompt Done.



prompt Importing table UO_DIM_VALUES_CONFIG...
set feedback off
set define off
insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('neworold', 'Y', '首购', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('neworold', 'N', '非首购', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('area', 'one', '一线城市', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('area', 'two', '二线城市', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('area', 'three', '三线城市', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('value', 'hvalue', '高价值', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('value', 'mvalue', '中等价值', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('value', 'gvalue', '低', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('activity', 'ha', '高活跃度', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('activity', 'ma', '中活跃度', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('activity', 'ga', '低活跃度', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('gender', 'm', '男', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('gender', 'f', '女', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('gender', 'none', '未知', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('age', 'young', '青年', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('age', 'midlife', '中年', null);

insert into UO_DIM_VALUES_CONFIG (DIM_CODE, VALUE_CODE, VALUE_DESC, ORDER_NO)
values ('age', 'old', '老年', null);

prompt Done.



prompt Importing table UO_KPI_DISMANT_CONFIG...
set feedback off
set define off
insert into UO_KPI_DISMANT_CONFIG (KPI_CODE, KPI_NAME, DISMANT_PART1_CODE, DISMANT_PART1_NAME, DISMANT_PART2_CODE, DISMANT_PART2_NAME)
values ('gmv', '销售额/GMV', 'ucnt', '用户数', 'uprice', '客单价');

insert into UO_KPI_DISMANT_CONFIG (KPI_CODE, KPI_NAME, DISMANT_PART1_CODE, DISMANT_PART1_NAME, DISMANT_PART2_CODE, DISMANT_PART2_NAME)
values ('uprice', '客单价', 'price', '订单价', 'pcnt', '订单数');

insert into UO_KPI_DISMANT_CONFIG (KPI_CODE, KPI_NAME, DISMANT_PART1_CODE, DISMANT_PART1_NAME, DISMANT_PART2_CODE, DISMANT_PART2_NAME)
values ('price', '订单价', 'joinrate', '连带率', 'sprice', '件单价');

insert into UO_KPI_DISMANT_CONFIG (KPI_CODE, KPI_NAME, DISMANT_PART1_CODE, DISMANT_PART1_NAME, DISMANT_PART2_CODE, DISMANT_PART2_NAME)
values ('pcnt', '订单数', 'tspan', '时间长度', 'freq', '购买频率');

insert into UO_KPI_DISMANT_CONFIG (KPI_CODE, KPI_NAME, DISMANT_PART1_CODE, DISMANT_PART1_NAME, DISMANT_PART2_CODE, DISMANT_PART2_NAME)
values ('sprice', '件单价', 'sprice2', '吊牌价', 'disrate', '折扣率');

prompt Done.


prompt Importing table UO_KPI_LIST_CONFIG...
set feedback off
set define off
insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('gmv', 'GMV', 'Y', 'Y', 'Y', '用户数*客单价', 'GMV', 'D');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('ucnt', '用户数', 'Y', 'N', 'Y', null, '用户数', 'D');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('uprice', '客单价', 'Y', 'Y', 'Y', '订单价*订单数', '客单价', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('price', '订单价', 'Y', 'Y', 'Y', '连带率*件单价', '订单价', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('pcnt', '订单数', 'Y', 'Y', 'Y', '时间长度*购买频率', '订单数', 'D');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('joinrate', '连带率', 'N', 'N', 'Y', null, '连带率', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('sprice', '件单价', 'N', 'Y', 'Y', '吊牌价*折扣率', '件单价', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('sprice2', '吊牌价', 'N', 'N', 'Y', null, '吊牌价', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('disrate', '折扣率', 'N', 'N', 'Y', null, '折扣率', 'D2');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('tspan', '时间长度', 'N', 'N', 'Y', null, '时间长度', 'D');

insert into UO_KPI_LIST_CONFIG (KPI_CODE, KPI_NAME, REASON_FLAG, DISMANT_FLAG, DIAG_FLAG, DISMANT_FORMULA, AXIS_NAME, VALUE_FORMAT)
values ('freq', '购买频率', 'N', 'N', 'Y', null, '购买频率', 'D2');

prompt Done.


prompt Importing table UO_KPI_SQLTEMPLATE_CONFIG...
set feedback off
set define off
insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_GMV', 'SELECT
  $COLUMN_INFO$
  SUM (W_ORDERS.REAL_FEE) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法获取GMV面积图数据', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_GMV_DETAIL', 'SELECT
  $COLUMN_INFO$
  SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法获取GMV面积图数据', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_TOP5_DIM_VALUE_DETAIL', 'WITH G1 AS(
SELECT
  $DIM_CODE$ DIM_VALUE,
  SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) GMV
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
 GROUP BY $DIM_CODE$ )
 SELECT * FROM (SELECT DIM_VALUE FROM G1 ORDER BY GMV DESC) WHERE ROWNUM<=5', '加法某个维度下排名前5的维度值', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_TSPAN_DETAIL', 'SELECT
  $COLUMN_INFO$
  1 VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '持续时长', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_UCNT', 'SELECT
  $COLUMN_INFO$
  COUNT (DISTINCT W_ORDERS.USER_ID) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '交易用户数', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_UCNT_DETAIL', 'SELECT
  $COLUMN_INFO$
  COUNT (DISTINCT W_ORDER_DETAILS.USER_ID) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '交易用户数从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_UPRICE', 'SELECT
   $PERIOD_NAME$ PERIOD_NAME,
  (CASE WHEN
     COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) UPRICE,
  TRUNC(AVG(W_ORDERS.REAL_FEE),2) PRICE,
  COUNT(W_ORDERS.ID) PCNT
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC ', '客单价拆分', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_UPRICE_DETAIL', ' SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
    TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.USER_ID),2) END)  UPRICE,
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END) PRICE,
   COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID) PCNT
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC  ', '客单价从明细表拆分', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_PRICE', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  TRUNC(AVG(W_ORDERS.REAL_FEE),2) PRICE,
  (CASE WHEN COUNT(W_ORDERS.ID)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.QUANTITY)/COUNT(W_ORDERS.ID),2) END) JOINRATE,
  (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/SUM(W_ORDERS.QUANTITY),2) END
) SPRICE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC ', '订单价拆分', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_PRICE_DETAIL', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END) PRICE,
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(QUANTITY)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END) JOINRATE,
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY),2) END) SPRICE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC ', '订单价从明细表拆分', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_PCNT', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  COUNT(W_ORDERS.ID) PCNT,
  (CASE WHEN COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
     TRUNC(COUNT(W_ORDERS.ID)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) FREQ,
  0 TSPAN
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC ', '订单数拆分', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_PCNT_DETAIL', ' SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID) PCNT,
  (CASE WHEN COUNT( DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)/SUM(W_ORDER_DETAILS.USER_ID),2) END) FREQ,
  0 TSPAN
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC   ', '订单数从明细表拆分', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_SPRICE', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE TRUNC(SUM(W_ORDERS.REAL_FEE)/SUM(W_ORDERS.QUANTITY),2) END) SPRICE,
  (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.MTK_ORDER_FEE)/SUM(W_ORDERS.QUANTITY),2) END) SPRICE2,
  (CASE WHEN SUM(W_ORDERS.ORDER_ORIGIN_FEE)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.DISCOUNT_FEE)/SUM(W_ORDERS.ORDER_ORIGIN_FEE),2) END) DISRATE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC ', '件单价拆分', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_SPRICE_DETAIL', ' SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY),2) END) SPRICE,
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.MKT_PRICE*QUANTITY)/SUM(W_ORDER_DETAILS.QUANTITY),2) END) SPRICE2,
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE),2) END) DISRATE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC  ', '件单价从明细表拆分', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_GMV', 'SELECT
  SUM (W_ORDERS.REAL_FEE) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', 'gmv过滤的SQL模板', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_GMV', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  SUM(W_ORDERS.REAL_FEE) GMV,
  COUNT(DISTINCT W_ORDERS.USER_ID) UCNT,
  (CASE WHEN
     COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) UPRICE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
    $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
    $DATE_RANGE$
    $WHERE_INFO$
  GROUP BY $PERIOD_NAME$
  ORDER BY $PERIOD_NAME$ ASC', 'gmv进行拆解', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_GMV_DETAIL', 'SELECT
  SUM (W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', 'gmv从订单明细过滤数据', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_TOP5_DIM_VALUE', 'WITH G1 AS(
SELECT
  $DIM_CODE$ DIM_VALUE,
  SUM (W_ORDERS.REAL_FEE) GMV
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
 GROUP BY $DIM_CODE$ )
 SELECT * FROM (SELECT DIM_VALUE FROM G1 ORDER BY GMV DESC) WHERE ROWNUM<=5', '加法某个维度下排名前5的维度值', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_UPRICE', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN
     COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE TRUNC(SUM(W_ORDERS.REAL_FEE)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法_客单价', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_UPRICE_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.USER_ID),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法客单价从明细取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_PRICE', 'SELECT
  $COLUMN_INFO$
  TRUNC(AVG(W_ORDERS.REAL_FEE),2) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法订单价', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_PRICE_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法订单价从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_PCNT', 'SELECT
  $COLUMN_INFO$
  COUNT(W_ORDERS.ID) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法 订单量', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_PCNT_DETAIL', 'SELECT
  $COLUMN_INFO$
  COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法订单量从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_JOINRATE', 'SELECT
  $COLUMN_INFO$
 (CASE WHEN COUNT(W_ORDERS.ID)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.QUANTITY)/COUNT(W_ORDERS.ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法连带率', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_JOINRATE_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(QUANTITY)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '加法连带率从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_SPRICE', 'SELECT
  $COLUMN_INFO$
 (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/SUM(W_ORDERS.QUANTITY),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '件单价从加法取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_SPRICE_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '件单价加法从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_SPRICE2', 'SELECT
  $COLUMN_INFO$
 (CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.MTK_ORDER_FEE)/SUM(W_ORDERS.QUANTITY),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '吊牌价从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_SPRICE2_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.MKT_PRICE*QUANTITY)/SUM(W_ORDER_DETAILS.QUANTITY),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '吊牌价从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_DISRATE', 'SELECT
  $COLUMN_INFO$
 (CASE WHEN SUM(W_ORDERS.ORDER_ORIGIN_FEE)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.DISCOUNT_FEE)/SUM(W_ORDERS.ORDER_ORIGIN_FEE),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '折扣率从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_DISRATE_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC
', '折扣率去明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_FREQ', 'SELECT
  $COLUMN_INFO$
 (CASE WHEN COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
     TRUNC(COUNT(W_ORDERS.ID)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '购买频次从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_FREQ_DETAIL', 'SELECT
  $COLUMN_INFO$
  (CASE WHEN COUNT( DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)/SUM(W_ORDER_DETAILS.USER_ID),2) END) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
  W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC
', '购买频次去明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('A_TSPAN', 'SELECT
  $COLUMN_INFO$
  0 VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
$GROUP_INFO$
ORDER BY $PERIOD_NAME$ ASC', '持续时长', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_UCNT', 'SELECT
  COUNT (DISTINCT W_ORDERS.USER_ID) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '交易用户数', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_UCNT_DETAIL', 'SELECT
 COUNT (DISTINCT W_ORDER_DETAILS.USER_ID) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$ ', '交易用户数从明细取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_UPRICE', 'SELECT
  (CASE WHEN
     COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '客单价从订单表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_UPRICE_DETAIL', 'SELECT
(CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.USER_ID),2) END)  VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$ ', '客单价从订单明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_PRICE', 'SELECT
   TRUNC(AVG(W_ORDERS.REAL_FEE),2) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '订单价从订单表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_PRICE_DETAIL', 'SELECT
(CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '订单价从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_PCNT', 'SELECT
  COUNT(W_ORDERS.ID) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '订单数从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_PCNT_DETAIL', 'SELECT
  COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID) VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '订单数从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_SPRICE', 'SELECT
(CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.REAL_FEE)/SUM(W_ORDERS.QUANTITY),2) END
)
   VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$ ', '件单价从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_SPRICE_DETAIL', 'SELECT
(CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY),2) END
)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$ ', '件单价从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_SPRICE2', 'SELECT
(CASE WHEN SUM(W_ORDERS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDERS.MTK_ORDER_FEE)/SUM(W_ORDERS.QUANTITY),2) END)
   VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$ ', '吊牌价从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_SPRICE2_DETAIL', 'SELECT
(CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.MKT_PRICE*QUANTITY)/SUM(W_ORDER_DETAILS.QUANTITY),2) END)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$  ', '吊牌价从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_DISRATE', 'SELECT
  (CASE WHEN SUM(W_ORDERS.ORDER_ORIGIN_FEE)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.DISCOUNT_FEE)/SUM(W_ORDERS.ORDER_ORIGIN_FEE),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '折扣率从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_DISRATE_DETAIL', 'SELECT
(CASE WHEN SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.DISCOUNT)/SUM(W_ORDER_DETAILS.QUANTITY*W_ORDER_DETAILS.PRICE),2) END)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '折扣率从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_FREQ', 'SELECT
  (CASE WHEN COUNT(DISTINCT W_ORDERS.USER_ID)=0 THEN 0 ELSE
     TRUNC(COUNT(W_ORDERS.ID)/COUNT(DISTINCT W_ORDERS.USER_ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '购买频率从头表取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_FREQ_DETAIL', 'SELECT
(CASE WHEN COUNT( DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)/SUM(W_ORDER_DETAILS.USER_ID),2) END)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '购买频率从明细表取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_JOINRATE', 'SELECT
  (CASE WHEN COUNT(W_ORDERS.ID)=0 THEN 0 ELSE
     TRUNC(SUM(W_ORDERS.QUANTITY)/COUNT(W_ORDERS.ID),2) END) VALUE
FROM
  W_ORDERS JOIN W_DATE ON W_ORDERS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDERS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '连带率从订单头取', null, null, '$JOIN_TABLES$,W_ORDERS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('F_JOINRATE_DETAIL', 'SELECT
(CASE WHEN COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(QUANTITY)/COUNT(DISTINCT W_ORDER_DETAILS.ORDER_ID),2) END)
   VALUE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$', '连带率从订单明细取', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

insert into UO_KPI_SQLTEMPLATE_CONFIG (SQL_TEMPLATE_CODE, SQL_TEMPLATE, COMMENTS, RESULT_TYPE, RESULT_MAPPING, DRIVER_TABLES)
values ('M_GMV_DETAIL', 'SELECT
  $PERIOD_NAME$ PERIOD_NAME,
  SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT) GMV,
  COUNT(DISTINCT W_ORDER_DETAILS.USER_ID) UCNT,
  (CASE WHEN
     COUNT(DISTINCT W_ORDER_DETAILS.USER_ID)=0 THEN 0 ELSE
  TRUNC(SUM(W_ORDER_DETAILS.PRICE*QUANTITY-W_ORDER_DETAILS.DISCOUNT)/COUNT(DISTINCT W_ORDER_DETAILS.USER_ID),2) END) UPRICE
FROM
  W_ORDER_DETAILS JOIN W_DATE ON W_ORDER_DETAILS.ORDER_DT_WID=W_DATE.ROW_WID
  $JOIN_TABLES$
WHERE
    W_ORDER_DETAILS.VALID_STATUS = 1
  $DATE_RANGE$
  $WHERE_INFO$
GROUP BY $PERIOD_NAME$
ORDER BY $PERIOD_NAME$ ASC  ', 'gmv进行拆解，从明细表获取数据', null, null, '$JOIN_TABLES$,W_ORDER_DETAILS');

prompt Done.


prompt Importing table UO_REASON_TEMPLATE_CONFIG...
set feedback off
set define off
insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'conversion_rate', '触达转化率', '320', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'product_accuracy_rate', '触达产品的准确率', '306', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'touch_users', '活动（计划）通知人数
', '322', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'write_off_amount', '活动优惠券核销金额
', '335', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'write_off_rate', '优惠券的核销率', '340', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'discount_rate', '折扣率', '401', '4');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'main_product_unite_price', '热销商品的价格水平', '403', '4');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'sales', '活动强度', '301', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'subsidy', '活动优惠金额', '309', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'subsidy_rate', '活动总优惠力度', '312', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'duration', '活动的持续时长', '313', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'hot_prod_rate', '活动商品的热销程度', '315', '3');

insert into UO_REASON_TEMPLATE_CONFIG (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'unit_price_rate', '活动商品的价格水平', '302', '3');

prompt Done.


prompt Importing table UO_REASON_TEMPLATE_POOL...
set feedback off
set define off
insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod1', '子品牌数', '100', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod2', '上架spu数', '106', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod3', '上新SPU数', '107', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod4', '在售SPU数', '108', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod5', '平均的退货率', '109', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod6', '平均库销比', '110', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod7', '平均动销率', '111', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod8', '平均售罄率', '112', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod9', '库存深度', '113', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod10', '周转率', '101', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod11', '价格带的宽度', '102', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod12', '品类数', '103', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod13', 'SPU深度', '104', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('prod', '产品', 'prod14', 'SKU深度', '105', '1');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('chnl', '渠道', 'chnl1', '渠道数量', '201', '2');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('chnl', '渠道', 'chnl2', '渠道等级', '202', '2');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'price1', '折扣率', '401', '4');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'price2', '同类产品价格比', '402', '4');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'price3', '热销商品的价格水平', '403', '4');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'price4', '价格调整次数', '404', '4');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('price', '价格', 'price5', '实际件单价与上市吊牌价格差距', '405', '4');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp1', '活动强度', '301', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp2', '活动运营成本', '308', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp3', '活动优惠金额', '309', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp4', '活动通知人数', '310', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp5', '活动等级', '311', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp6', '活动总优惠力度', '312', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp7', '活动的持续时长/活动时间占比', '313', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp8', '活动商品的应季性', '314', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp9', '活动商品的热销程度', '315', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp10', '活动商品的价格水平', '302', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp11', '活动sku的人群指向性', '303', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp12', '参活过季SPU占全部活动SPU比重', '304', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp13', '优惠券的核销率', '305', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp14', '触达产品的准确率', '306', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp15', '触达品类的准确率', '307', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp16', '触达转化率
', '320', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp18', '活动（计划）通知人数', '322', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp19', '活动优惠券核销金额', '335', '3');

insert into UO_REASON_TEMPLATE_POOL (TEMPLATE_CODE, TEMPLATE_NAME, REASON_KPI_CODE, REASON_KPI_NAME, REASON_KPI_ORDER, TEMPLATE_ORDER)
values ('camp', '促销/活动', 'camp20', '优惠券的核销率', '340', '3');

prompt Done.



prompt Importing table UO_TGT_DIMENSION...
set feedback off
set define off
insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('3', '10', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('3', '10', 'source', '渠道', '1,2,3,4', 'PC商城,小程序,APP,wap站');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('12', '21', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('12', '21', 'source', '渠道', '1,2,3,4', 'PC商城,小程序,APP,wap站');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('15', '24', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('16', '27', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('17', '29', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('11', '18', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('19', '47', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('13', '22', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('13', '22', 'source', '渠道', '1,2', 'PC商城,小程序');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('14', '23', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('20', '48', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('4', '11', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('5', '12', 'source', '渠道', '1,2', 'PC商城,小程序');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('6', '13', 'source', '渠道', '1,2', 'PC商城,小程序');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('7', '14', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('8', '15', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('9', '16', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('10', '17', 'neworold', '首购/非首购', 'Y', '首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('18', '41', 'neworold', '首购/非首购', 'Y,N', '首购,非首购');

insert into UO_TGT_DIMENSION (ID, TGT_ID, DIMENSION_CODE, DIMENSION_NAME, DIMENSION_VAL_CODE, DIMENSION_VAL_NAME)
values ('18', '41', 'source', '渠道', '1,2,3', 'PC商城,app,wap站');

prompt Done.



